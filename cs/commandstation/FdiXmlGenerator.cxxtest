/** \copyright
 * Copyright (c) 2016, Balazs Racz
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are  permitted provided that the following conditions are met:
 *
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \file FdiXmlGenerator.cxxtest
 *
 * Unit tests for the train FDI generator.
 *
 * @author Balazs Racz
 * @date 16 Jan 2016
 */

#include "commandstation/FdiXmlGenerator.hxx"
#include "utils/test_main.hxx"

namespace commandstation {


const struct const_loco_db_t my_lokdb[] = {
  { 51, { 0, 1, 2, 3, 4, 6, 0xff, }, { LIGHT, TELEX, HORN, SHUNT, ABV, 0x3e, 0xff, },
    "BR 260417", DCC_28 },  // ESU LokPilot 3.0
  { 50, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0xff} , { LIGHT, ENGINE, HORN, SPEECH, SPEECH, SPEECH, SPEECH, LIGHT1, FNP, ABV, HORN, SOUNDP, SOUNDP, SOUNDP, HORN, HORN, HORN, HORN, HORN, HORN, 0xff }, "ICN", DCC_128 | PUSHPULL },  // ESU loksound V4.0 MM/DCC
  { 22, { 0xff, }, { 0xff, },
    "Fooo", DCC_128 }, // todo: there is no beamer here // LD-32 decoder
  { 22, { 0, 0xff, }, { LIGHT, 0xff, },
    "RE 460 TSR", DCC_128 }, // todo: there is no beamer here // LD-32 decoder
};

class FdiXmlGeneratorTest : public testing::Test {
 protected:
  string generate_all() {
    char buf[40];
    string ret;
    unsigned ofs = 0;
    do {
      ssize_t v = gen.read(ofs, buf, sizeof(buf));
      HASSERT(v >= 0);
      if (v == 0) return ret;
      ret.append(buf, v);
      ofs += v;
    } while(true);
  }

  void load_lok(int n) {
    memcpy(gen.entry(), my_lokdb + n, sizeof(*gen.entry()));
    gen.reset();
  }

  FdiXmlGenerator gen;
};

const char kRe460Xml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
<function size='1' kind='binary'>
<name>Light</name>
<number>0</number>
</function>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenSingleFn) {
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
};

const char kFooXml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenZeroFn) {
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
};

TEST_F(FdiXmlGeneratorTest, GenMultiple) {
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
  load_lok(2);
  EXPECT_EQ(kFooXml, generate_all());
  load_lok(3);
  EXPECT_EQ(kRe460Xml, generate_all());
};

const char kBr260Xml[] =
R"(<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type='text/xsl' href='xslt/fdi.xsl'?>
<fdi xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:noNamespaceSchemaLocation='http://openlcb.org/trunk/prototypes/xml/schema/fdi.xsd'>
<segment space='249'><group><name/>
<function size='1' kind='binary'>
<name>Light</name>
<number>0</number>
</function>
<function size='1' kind='binary'>
<name>Coupler</name>
<number>1</number>
</function>
<function size='1' kind='momentary'>
<name>Horn</name>
<number>2</number>
</function>
<function size='1' kind='binary'>
<name>Shunt</name>
<number>3</number>
</function>
<function size='1' kind='binary'>
<name>ABV</name>
<number>4</number>
</function>
<function size='1' kind='binary'>
<name>F6</name>
<number>6</number>
</function>
</group></segment></fdi>)";

TEST_F(FdiXmlGeneratorTest, GenBr260) {
  load_lok(0);
  EXPECT_EQ(kBr260Xml, generate_all());
};

} // namespace commandstation
