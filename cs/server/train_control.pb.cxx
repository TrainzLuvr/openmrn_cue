// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: train_control.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "train_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace server {

namespace {

const ::google::protobuf::Descriptor* LokStateProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LokStateProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LokStateProto_Function_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LokStateProto_Function_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetSpeed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoSetSpeed_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetAccessory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoSetAccessory_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetEmergencyStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoSetEmergencyStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoRpc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoRpc_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoPing_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoPing_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetOrSetAddress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoGetOrSetAddress_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoDropState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoDropState_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoChangeSavedState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoChangeSavedState_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoSendRawCanPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoSendRawCanPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoReflashAutomata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoReflashAutomata_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetLokDb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoGetLokDb_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetLokState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoGetLokState_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoEStopLoco_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoEStopLoco_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoPicMisc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoPicMisc_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoReflashPic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoReflashPic_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetOrSetCV_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoGetOrSetCV_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlRequest_DoWaitForChange_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlRequest_DoWaitForChange_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_Speed_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_Speed_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_Accessory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_Accessory_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_EmergencyStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_EmergencyStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_RpcResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_RpcResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_Pong_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_Pong_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_CurrentAddress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_CurrentAddress_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_RawCanPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_RawCanPacket_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_ReflashAutomata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_ReflashAutomata_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_LokDb_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb_Lok_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_LokDb_Lok_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb_Lok_Function_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_LokDb_Lok_Function_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_PicMisc_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_PicMisc_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_ReflashPic_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_ReflashPic_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_Cv_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_Cv_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainControlResponse_WaitForChangeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainControlResponse_WaitForChangeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* TinyRpcRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TinyRpcRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TinyRpcResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TinyRpcResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_train_5fcontrol_2eproto() {
  protobuf_AddDesc_train_5fcontrol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "train_control.proto");
  GOOGLE_CHECK(file != NULL);
  LokStateProto_descriptor_ = file->message_type(0);
  static const int LokStateProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, speed_ts_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, ts_),
  };
  LokStateProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LokStateProto_descriptor_,
      LokStateProto::default_instance_,
      LokStateProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LokStateProto));
  LokStateProto_Function_descriptor_ = LokStateProto_descriptor_->nested_type(0);
  static const int LokStateProto_Function_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto_Function, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto_Function, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto_Function, ts_),
  };
  LokStateProto_Function_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LokStateProto_Function_descriptor_,
      LokStateProto_Function::default_instance_,
      LokStateProto_Function_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto_Function, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LokStateProto_Function, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LokStateProto_Function));
  TrainControlRequest_descriptor_ = file->message_type(1);
  static const int TrainControlRequest_offsets_[18] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dosetspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dosetaccessory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dosetemergencystop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dorpc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, doping_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dogetorsetaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dodropstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dochangesavedstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dosendrawcanpacket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, doreflashautomata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dogetlokdb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dogetlokstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dosetlokstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, doestoploco_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dopicmisc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, doreflashpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dogetorsetcv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, dowaitforchange_),
  };
  TrainControlRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_descriptor_,
      TrainControlRequest::default_instance_,
      TrainControlRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest));
  TrainControlRequest_DoSetSpeed_descriptor_ = TrainControlRequest_descriptor_->nested_type(0);
  static const int TrainControlRequest_DoSetSpeed_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetSpeed, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetSpeed, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetSpeed, speed_),
  };
  TrainControlRequest_DoSetSpeed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoSetSpeed_descriptor_,
      TrainControlRequest_DoSetSpeed::default_instance_,
      TrainControlRequest_DoSetSpeed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetSpeed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetSpeed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoSetSpeed));
  TrainControlRequest_DoSetAccessory_descriptor_ = TrainControlRequest_descriptor_->nested_type(1);
  static const int TrainControlRequest_DoSetAccessory_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetAccessory, train_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetAccessory, accessory_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetAccessory, value_),
  };
  TrainControlRequest_DoSetAccessory_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoSetAccessory_descriptor_,
      TrainControlRequest_DoSetAccessory::default_instance_,
      TrainControlRequest_DoSetAccessory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetAccessory, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetAccessory, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoSetAccessory));
  TrainControlRequest_DoSetEmergencyStop_descriptor_ = TrainControlRequest_descriptor_->nested_type(2);
  static const int TrainControlRequest_DoSetEmergencyStop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetEmergencyStop, stop_),
  };
  TrainControlRequest_DoSetEmergencyStop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoSetEmergencyStop_descriptor_,
      TrainControlRequest_DoSetEmergencyStop::default_instance_,
      TrainControlRequest_DoSetEmergencyStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetEmergencyStop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSetEmergencyStop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoSetEmergencyStop));
  TrainControlRequest_DoRpc_descriptor_ = TrainControlRequest_descriptor_->nested_type(3);
  static const int TrainControlRequest_DoRpc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, destination_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, arg1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, arg2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, payload_),
  };
  TrainControlRequest_DoRpc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoRpc_descriptor_,
      TrainControlRequest_DoRpc::default_instance_,
      TrainControlRequest_DoRpc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoRpc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoRpc));
  TrainControlRequest_DoPing_descriptor_ = TrainControlRequest_descriptor_->nested_type(4);
  static const int TrainControlRequest_DoPing_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPing, value_),
  };
  TrainControlRequest_DoPing_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoPing_descriptor_,
      TrainControlRequest_DoPing::default_instance_,
      TrainControlRequest_DoPing_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPing, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPing, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoPing));
  TrainControlRequest_DoGetOrSetAddress_descriptor_ = TrainControlRequest_descriptor_->nested_type(5);
  static const int TrainControlRequest_DoGetOrSetAddress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetAddress, new_address_),
  };
  TrainControlRequest_DoGetOrSetAddress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoGetOrSetAddress_descriptor_,
      TrainControlRequest_DoGetOrSetAddress::default_instance_,
      TrainControlRequest_DoGetOrSetAddress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetAddress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetAddress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoGetOrSetAddress));
  TrainControlRequest_DoDropState_descriptor_ = TrainControlRequest_descriptor_->nested_type(6);
  static const int TrainControlRequest_DoDropState_offsets_[1] = {
  };
  TrainControlRequest_DoDropState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoDropState_descriptor_,
      TrainControlRequest_DoDropState::default_instance_,
      TrainControlRequest_DoDropState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoDropState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoDropState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoDropState));
  TrainControlRequest_DoChangeSavedState_descriptor_ = TrainControlRequest_descriptor_->nested_type(7);
  static const int TrainControlRequest_DoChangeSavedState_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, client_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, new_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, bits_to_set_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, bits_to_clear_),
  };
  TrainControlRequest_DoChangeSavedState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoChangeSavedState_descriptor_,
      TrainControlRequest_DoChangeSavedState::default_instance_,
      TrainControlRequest_DoChangeSavedState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoChangeSavedState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoChangeSavedState));
  TrainControlRequest_DoSendRawCanPacket_descriptor_ = TrainControlRequest_descriptor_->nested_type(8);
  static const int TrainControlRequest_DoSendRawCanPacket_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSendRawCanPacket, wait_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSendRawCanPacket, d_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSendRawCanPacket, data_),
  };
  TrainControlRequest_DoSendRawCanPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoSendRawCanPacket_descriptor_,
      TrainControlRequest_DoSendRawCanPacket::default_instance_,
      TrainControlRequest_DoSendRawCanPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSendRawCanPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoSendRawCanPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoSendRawCanPacket));
  TrainControlRequest_DoReflashAutomata_descriptor_ = TrainControlRequest_descriptor_->nested_type(9);
  static const int TrainControlRequest_DoReflashAutomata_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, destination_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, signal_address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, data_),
  };
  TrainControlRequest_DoReflashAutomata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoReflashAutomata_descriptor_,
      TrainControlRequest_DoReflashAutomata::default_instance_,
      TrainControlRequest_DoReflashAutomata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashAutomata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoReflashAutomata));
  TrainControlRequest_DoGetLokDb_descriptor_ = TrainControlRequest_descriptor_->nested_type(10);
  static const int TrainControlRequest_DoGetLokDb_offsets_[1] = {
  };
  TrainControlRequest_DoGetLokDb_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoGetLokDb_descriptor_,
      TrainControlRequest_DoGetLokDb::default_instance_,
      TrainControlRequest_DoGetLokDb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetLokDb, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetLokDb, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoGetLokDb));
  TrainControlRequest_DoGetLokState_descriptor_ = TrainControlRequest_descriptor_->nested_type(11);
  static const int TrainControlRequest_DoGetLokState_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetLokState, id_),
  };
  TrainControlRequest_DoGetLokState_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoGetLokState_descriptor_,
      TrainControlRequest_DoGetLokState::default_instance_,
      TrainControlRequest_DoGetLokState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetLokState, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetLokState, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoGetLokState));
  TrainControlRequest_DoEStopLoco_descriptor_ = TrainControlRequest_descriptor_->nested_type(12);
  static const int TrainControlRequest_DoEStopLoco_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoEStopLoco, id_),
  };
  TrainControlRequest_DoEStopLoco_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoEStopLoco_descriptor_,
      TrainControlRequest_DoEStopLoco::default_instance_,
      TrainControlRequest_DoEStopLoco_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoEStopLoco, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoEStopLoco, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoEStopLoco));
  TrainControlRequest_DoPicMisc_descriptor_ = TrainControlRequest_descriptor_->nested_type(13);
  static const int TrainControlRequest_DoPicMisc_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPicMisc, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPicMisc, arg_),
  };
  TrainControlRequest_DoPicMisc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoPicMisc_descriptor_,
      TrainControlRequest_DoPicMisc::default_instance_,
      TrainControlRequest_DoPicMisc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPicMisc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoPicMisc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoPicMisc));
  TrainControlRequest_DoReflashPic_descriptor_ = TrainControlRequest_descriptor_->nested_type(14);
  static const int TrainControlRequest_DoReflashPic_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashPic, data_),
  };
  TrainControlRequest_DoReflashPic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoReflashPic_descriptor_,
      TrainControlRequest_DoReflashPic::default_instance_,
      TrainControlRequest_DoReflashPic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashPic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoReflashPic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoReflashPic));
  TrainControlRequest_DoGetOrSetCV_descriptor_ = TrainControlRequest_descriptor_->nested_type(15);
  static const int TrainControlRequest_DoGetOrSetCV_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetCV, train_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetCV, cv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetCV, value_),
  };
  TrainControlRequest_DoGetOrSetCV_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoGetOrSetCV_descriptor_,
      TrainControlRequest_DoGetOrSetCV::default_instance_,
      TrainControlRequest_DoGetOrSetCV_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetCV, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoGetOrSetCV, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoGetOrSetCV));
  TrainControlRequest_DoWaitForChange_descriptor_ = TrainControlRequest_descriptor_->nested_type(16);
  static const int TrainControlRequest_DoWaitForChange_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoWaitForChange, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoWaitForChange, id_),
  };
  TrainControlRequest_DoWaitForChange_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlRequest_DoWaitForChange_descriptor_,
      TrainControlRequest_DoWaitForChange::default_instance_,
      TrainControlRequest_DoWaitForChange_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoWaitForChange, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlRequest_DoWaitForChange, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlRequest_DoWaitForChange));
  TrainControlResponse_descriptor_ = file->message_type(2);
  static const int TrainControlResponse_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, accessory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, emergencystop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, rpcresponse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, pong_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, currentaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, rawcanpacket_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, reflashautomata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, lokdb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, lokstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, picmisc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, reflashpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, cv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, waitforchangeresponse_),
  };
  TrainControlResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_descriptor_,
      TrainControlResponse::default_instance_,
      TrainControlResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse));
  TrainControlResponse_Speed_descriptor_ = TrainControlResponse_descriptor_->nested_type(0);
  static const int TrainControlResponse_Speed_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, speed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, timestamp_),
  };
  TrainControlResponse_Speed_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_Speed_descriptor_,
      TrainControlResponse_Speed::default_instance_,
      TrainControlResponse_Speed_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Speed, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_Speed));
  TrainControlResponse_Accessory_descriptor_ = TrainControlResponse_descriptor_->nested_type(1);
  static const int TrainControlResponse_Accessory_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, train_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, accessory_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, timestamp_),
  };
  TrainControlResponse_Accessory_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_Accessory_descriptor_,
      TrainControlResponse_Accessory::default_instance_,
      TrainControlResponse_Accessory_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Accessory, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_Accessory));
  TrainControlResponse_EmergencyStop_descriptor_ = TrainControlResponse_descriptor_->nested_type(2);
  static const int TrainControlResponse_EmergencyStop_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_EmergencyStop, stop_),
  };
  TrainControlResponse_EmergencyStop_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_EmergencyStop_descriptor_,
      TrainControlResponse_EmergencyStop::default_instance_,
      TrainControlResponse_EmergencyStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_EmergencyStop, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_EmergencyStop, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_EmergencyStop));
  TrainControlResponse_RpcResponse_descriptor_ = TrainControlResponse_descriptor_->nested_type(3);
  static const int TrainControlResponse_RpcResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RpcResponse, success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RpcResponse, response_),
  };
  TrainControlResponse_RpcResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_RpcResponse_descriptor_,
      TrainControlResponse_RpcResponse::default_instance_,
      TrainControlResponse_RpcResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RpcResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RpcResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_RpcResponse));
  TrainControlResponse_Pong_descriptor_ = TrainControlResponse_descriptor_->nested_type(4);
  static const int TrainControlResponse_Pong_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Pong, value_),
  };
  TrainControlResponse_Pong_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_Pong_descriptor_,
      TrainControlResponse_Pong::default_instance_,
      TrainControlResponse_Pong_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Pong, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Pong, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_Pong));
  TrainControlResponse_CurrentAddress_descriptor_ = TrainControlResponse_descriptor_->nested_type(5);
  static const int TrainControlResponse_CurrentAddress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_CurrentAddress, address_),
  };
  TrainControlResponse_CurrentAddress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_CurrentAddress_descriptor_,
      TrainControlResponse_CurrentAddress::default_instance_,
      TrainControlResponse_CurrentAddress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_CurrentAddress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_CurrentAddress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_CurrentAddress));
  TrainControlResponse_RawCanPacket_descriptor_ = TrainControlResponse_descriptor_->nested_type(6);
  static const int TrainControlResponse_RawCanPacket_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RawCanPacket, data_),
  };
  TrainControlResponse_RawCanPacket_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_RawCanPacket_descriptor_,
      TrainControlResponse_RawCanPacket::default_instance_,
      TrainControlResponse_RawCanPacket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RawCanPacket, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_RawCanPacket, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_RawCanPacket));
  TrainControlResponse_ReflashAutomata_descriptor_ = TrainControlResponse_descriptor_->nested_type(7);
  static const int TrainControlResponse_ReflashAutomata_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashAutomata, error_),
  };
  TrainControlResponse_ReflashAutomata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_ReflashAutomata_descriptor_,
      TrainControlResponse_ReflashAutomata::default_instance_,
      TrainControlResponse_ReflashAutomata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashAutomata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashAutomata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_ReflashAutomata));
  TrainControlResponse_LokDb_descriptor_ = TrainControlResponse_descriptor_->nested_type(8);
  static const int TrainControlResponse_LokDb_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb, lok_),
  };
  TrainControlResponse_LokDb_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_LokDb_descriptor_,
      TrainControlResponse_LokDb::default_instance_,
      TrainControlResponse_LokDb_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_LokDb));
  TrainControlResponse_LokDb_Lok_descriptor_ = TrainControlResponse_LokDb_descriptor_->nested_type(0);
  static const int TrainControlResponse_LokDb_Lok_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, address_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, function_),
  };
  TrainControlResponse_LokDb_Lok_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_LokDb_Lok_descriptor_,
      TrainControlResponse_LokDb_Lok::default_instance_,
      TrainControlResponse_LokDb_Lok_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_LokDb_Lok));
  TrainControlResponse_LokDb_Lok_Function_descriptor_ = TrainControlResponse_LokDb_Lok_descriptor_->nested_type(0);
  static const int TrainControlResponse_LokDb_Lok_Function_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok_Function, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok_Function, type_),
  };
  TrainControlResponse_LokDb_Lok_Function_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_LokDb_Lok_Function_descriptor_,
      TrainControlResponse_LokDb_Lok_Function::default_instance_,
      TrainControlResponse_LokDb_Lok_Function_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok_Function, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_LokDb_Lok_Function, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_LokDb_Lok_Function));
  TrainControlResponse_PicMisc_descriptor_ = TrainControlResponse_descriptor_->nested_type(9);
  static const int TrainControlResponse_PicMisc_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, arg1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, arg2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, more_arg_),
  };
  TrainControlResponse_PicMisc_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_PicMisc_descriptor_,
      TrainControlResponse_PicMisc::default_instance_,
      TrainControlResponse_PicMisc_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_PicMisc, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_PicMisc));
  TrainControlResponse_ReflashPic_descriptor_ = TrainControlResponse_descriptor_->nested_type(10);
  static const int TrainControlResponse_ReflashPic_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashPic, error_),
  };
  TrainControlResponse_ReflashPic_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_ReflashPic_descriptor_,
      TrainControlResponse_ReflashPic::default_instance_,
      TrainControlResponse_ReflashPic_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashPic, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_ReflashPic, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_ReflashPic));
  TrainControlResponse_Cv_descriptor_ = TrainControlResponse_descriptor_->nested_type(11);
  static const int TrainControlResponse_Cv_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, train_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, cv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, value_),
  };
  TrainControlResponse_Cv_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_Cv_descriptor_,
      TrainControlResponse_Cv::default_instance_,
      TrainControlResponse_Cv_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_Cv, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_Cv));
  TrainControlResponse_WaitForChangeResponse_descriptor_ = TrainControlResponse_descriptor_->nested_type(12);
  static const int TrainControlResponse_WaitForChangeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_WaitForChangeResponse, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_WaitForChangeResponse, id_),
  };
  TrainControlResponse_WaitForChangeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TrainControlResponse_WaitForChangeResponse_descriptor_,
      TrainControlResponse_WaitForChangeResponse::default_instance_,
      TrainControlResponse_WaitForChangeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_WaitForChangeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainControlResponse_WaitForChangeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TrainControlResponse_WaitForChangeResponse));
  TinyRpcRequest_descriptor_ = file->message_type(3);
  static const int TinyRpcRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcRequest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcRequest, request_),
  };
  TinyRpcRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TinyRpcRequest_descriptor_,
      TinyRpcRequest::default_instance_,
      TinyRpcRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TinyRpcRequest));
  TinyRpcResponse_descriptor_ = file->message_type(4);
  static const int TinyRpcResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, failed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, error_detail_),
  };
  TinyRpcResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TinyRpcResponse_descriptor_,
      TinyRpcResponse::default_instance_,
      TinyRpcResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TinyRpcResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TinyRpcResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_train_5fcontrol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LokStateProto_descriptor_, &LokStateProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LokStateProto_Function_descriptor_, &LokStateProto_Function::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_descriptor_, &TrainControlRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoSetSpeed_descriptor_, &TrainControlRequest_DoSetSpeed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoSetAccessory_descriptor_, &TrainControlRequest_DoSetAccessory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoSetEmergencyStop_descriptor_, &TrainControlRequest_DoSetEmergencyStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoRpc_descriptor_, &TrainControlRequest_DoRpc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoPing_descriptor_, &TrainControlRequest_DoPing::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoGetOrSetAddress_descriptor_, &TrainControlRequest_DoGetOrSetAddress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoDropState_descriptor_, &TrainControlRequest_DoDropState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoChangeSavedState_descriptor_, &TrainControlRequest_DoChangeSavedState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoSendRawCanPacket_descriptor_, &TrainControlRequest_DoSendRawCanPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoReflashAutomata_descriptor_, &TrainControlRequest_DoReflashAutomata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoGetLokDb_descriptor_, &TrainControlRequest_DoGetLokDb::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoGetLokState_descriptor_, &TrainControlRequest_DoGetLokState::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoEStopLoco_descriptor_, &TrainControlRequest_DoEStopLoco::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoPicMisc_descriptor_, &TrainControlRequest_DoPicMisc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoReflashPic_descriptor_, &TrainControlRequest_DoReflashPic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoGetOrSetCV_descriptor_, &TrainControlRequest_DoGetOrSetCV::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlRequest_DoWaitForChange_descriptor_, &TrainControlRequest_DoWaitForChange::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_descriptor_, &TrainControlResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_Speed_descriptor_, &TrainControlResponse_Speed::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_Accessory_descriptor_, &TrainControlResponse_Accessory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_EmergencyStop_descriptor_, &TrainControlResponse_EmergencyStop::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_RpcResponse_descriptor_, &TrainControlResponse_RpcResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_Pong_descriptor_, &TrainControlResponse_Pong::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_CurrentAddress_descriptor_, &TrainControlResponse_CurrentAddress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_RawCanPacket_descriptor_, &TrainControlResponse_RawCanPacket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_ReflashAutomata_descriptor_, &TrainControlResponse_ReflashAutomata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_LokDb_descriptor_, &TrainControlResponse_LokDb::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_LokDb_Lok_descriptor_, &TrainControlResponse_LokDb_Lok::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_LokDb_Lok_Function_descriptor_, &TrainControlResponse_LokDb_Lok_Function::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_PicMisc_descriptor_, &TrainControlResponse_PicMisc::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_ReflashPic_descriptor_, &TrainControlResponse_ReflashPic::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_Cv_descriptor_, &TrainControlResponse_Cv::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TrainControlResponse_WaitForChangeResponse_descriptor_, &TrainControlResponse_WaitForChangeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TinyRpcRequest_descriptor_, &TinyRpcRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TinyRpcResponse_descriptor_, &TinyRpcResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_train_5fcontrol_2eproto() {
  delete LokStateProto::default_instance_;
  delete LokStateProto_reflection_;
  delete LokStateProto_Function::default_instance_;
  delete LokStateProto_Function_reflection_;
  delete TrainControlRequest::default_instance_;
  delete TrainControlRequest_reflection_;
  delete TrainControlRequest_DoSetSpeed::default_instance_;
  delete TrainControlRequest_DoSetSpeed_reflection_;
  delete TrainControlRequest_DoSetAccessory::default_instance_;
  delete TrainControlRequest_DoSetAccessory_reflection_;
  delete TrainControlRequest_DoSetEmergencyStop::default_instance_;
  delete TrainControlRequest_DoSetEmergencyStop_reflection_;
  delete TrainControlRequest_DoRpc::default_instance_;
  delete TrainControlRequest_DoRpc_reflection_;
  delete TrainControlRequest_DoPing::default_instance_;
  delete TrainControlRequest_DoPing_reflection_;
  delete TrainControlRequest_DoGetOrSetAddress::default_instance_;
  delete TrainControlRequest_DoGetOrSetAddress_reflection_;
  delete TrainControlRequest_DoDropState::default_instance_;
  delete TrainControlRequest_DoDropState_reflection_;
  delete TrainControlRequest_DoChangeSavedState::default_instance_;
  delete TrainControlRequest_DoChangeSavedState_reflection_;
  delete TrainControlRequest_DoSendRawCanPacket::default_instance_;
  delete TrainControlRequest_DoSendRawCanPacket_reflection_;
  delete TrainControlRequest_DoReflashAutomata::default_instance_;
  delete TrainControlRequest_DoReflashAutomata_reflection_;
  delete TrainControlRequest_DoGetLokDb::default_instance_;
  delete TrainControlRequest_DoGetLokDb_reflection_;
  delete TrainControlRequest_DoGetLokState::default_instance_;
  delete TrainControlRequest_DoGetLokState_reflection_;
  delete TrainControlRequest_DoEStopLoco::default_instance_;
  delete TrainControlRequest_DoEStopLoco_reflection_;
  delete TrainControlRequest_DoPicMisc::default_instance_;
  delete TrainControlRequest_DoPicMisc_reflection_;
  delete TrainControlRequest_DoReflashPic::default_instance_;
  delete TrainControlRequest_DoReflashPic_reflection_;
  delete TrainControlRequest_DoGetOrSetCV::default_instance_;
  delete TrainControlRequest_DoGetOrSetCV_reflection_;
  delete TrainControlRequest_DoWaitForChange::default_instance_;
  delete TrainControlRequest_DoWaitForChange_reflection_;
  delete TrainControlResponse::default_instance_;
  delete TrainControlResponse_reflection_;
  delete TrainControlResponse_Speed::default_instance_;
  delete TrainControlResponse_Speed_reflection_;
  delete TrainControlResponse_Accessory::default_instance_;
  delete TrainControlResponse_Accessory_reflection_;
  delete TrainControlResponse_EmergencyStop::default_instance_;
  delete TrainControlResponse_EmergencyStop_reflection_;
  delete TrainControlResponse_RpcResponse::default_instance_;
  delete TrainControlResponse_RpcResponse_reflection_;
  delete TrainControlResponse_Pong::default_instance_;
  delete TrainControlResponse_Pong_reflection_;
  delete TrainControlResponse_CurrentAddress::default_instance_;
  delete TrainControlResponse_CurrentAddress_reflection_;
  delete TrainControlResponse_RawCanPacket::default_instance_;
  delete TrainControlResponse_RawCanPacket_reflection_;
  delete TrainControlResponse_ReflashAutomata::default_instance_;
  delete TrainControlResponse_ReflashAutomata_reflection_;
  delete TrainControlResponse_LokDb::default_instance_;
  delete TrainControlResponse_LokDb_reflection_;
  delete TrainControlResponse_LokDb_Lok::default_instance_;
  delete TrainControlResponse_LokDb_Lok_reflection_;
  delete TrainControlResponse_LokDb_Lok_Function::default_instance_;
  delete TrainControlResponse_LokDb_Lok_Function_reflection_;
  delete TrainControlResponse_PicMisc::default_instance_;
  delete TrainControlResponse_PicMisc_reflection_;
  delete TrainControlResponse_ReflashPic::default_instance_;
  delete TrainControlResponse_ReflashPic_reflection_;
  delete TrainControlResponse_Cv::default_instance_;
  delete TrainControlResponse_Cv_reflection_;
  delete TrainControlResponse_WaitForChangeResponse::default_instance_;
  delete TrainControlResponse_WaitForChangeResponse_reflection_;
  delete TinyRpcRequest::default_instance_;
  delete TinyRpcRequest_reflection_;
  delete TinyRpcResponse::default_instance_;
  delete TinyRpcResponse_reflection_;
}

void protobuf_AddDesc_train_5fcontrol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023train_control.proto\022\006server\"\275\001\n\rLokSta"
    "teProto\022\n\n\002id\030\001 \002(\005\022\016\n\003dir\030\002 \001(\005:\0011\022\r\n\005s"
    "peed\030\003 \001(\005\022\020\n\010speed_ts\030\t \001(\003\0220\n\010function"
    "\030\004 \003(\n2\036.server.LokStateProto.Function\022\n"
    "\n\002ts\030\007 \001(\003\0321\n\010Function\022\n\n\002id\030\005 \002(\005\022\r\n\005va"
    "lue\030\006 \001(\005\022\n\n\002ts\030\010 \001(\003\"\250\020\n\023TrainControlRe"
    "quest\022:\n\ndosetspeed\030\001 \001(\n2&.server.Train"
    "ControlRequest.DoSetSpeed\022B\n\016dosetaccess"
    "ory\030\004 \001(\n2*.server.TrainControlRequest.D"
    "oSetAccessory\022J\n\022dosetemergencystop\030\010 \001("
    "\n2..server.TrainControlRequest.DoSetEmer"
    "gencyStop\0220\n\005dorpc\030\020 \001(\n2!.server.TrainC"
    "ontrolRequest.DoRpc\0222\n\006doping\030\025 \001(\n2\".se"
    "rver.TrainControlRequest.DoPing\022H\n\021doget"
    "orsetaddress\030\027 \001(\n2-.server.TrainControl"
    "Request.DoGetOrSetAddress\022<\n\013dodropstate"
    "\030\031 \001(\n2\'.server.TrainControlRequest.DoDr"
    "opState\022J\n\022dochangesavedstate\030\032 \001(\n2..se"
    "rver.TrainControlRequest.DoChangeSavedSt"
    "ate\022J\n\022dosendrawcanpacket\030  \001(\n2..server"
    ".TrainControlRequest.DoSendRawCanPacket\022"
    "H\n\021doreflashautomata\030( \001(\n2-.server.Trai"
    "nControlRequest.DoReflashAutomata\022:\n\ndog"
    "etlokdb\030) \001(\n2&.server.TrainControlReque"
    "st.DoGetLokDb\022@\n\rdogetlokstate\030* \001(\n2).s"
    "erver.TrainControlRequest.DoGetLokState\022"
    ",\n\rDoSetLokState\030, \001(\0132\025.server.LokState"
    "Proto\022<\n\013doestoploco\030- \001(\n2\'.server.Trai"
    "nControlRequest.DoEStopLoco\0228\n\tdopicmisc"
    "\030/ \001(\n2%.server.TrainControlRequest.DoPi"
    "cMisc\022>\n\014doreflashpic\0302 \001(\n2(.server.Tra"
    "inControlRequest.DoReflashPic\022>\n\014dogetor"
    "setcv\0304 \001(\n2(.server.TrainControlRequest"
    ".DoGetOrSetCV\022D\n\017dowaitforchange\0308 \001(\n2+"
    ".server.TrainControlRequest.DoWaitForCha"
    "nge\0327\n\nDoSetSpeed\022\n\n\002id\030\002 \002(\005\022\016\n\003dir\030$ \001"
    "(\005:\0011\022\r\n\005speed\030\003 \001(\005\032G\n\016DoSetAccessory\022\020"
    "\n\010train_id\030\005 \002(\005\022\024\n\014accessory_id\030\006 \002(\005\022\r"
    "\n\005value\030\007 \001(\005\032\"\n\022DoSetEmergencyStop\022\014\n\004s"
    "top\030\t \001(\010\032b\n\005DoRpc\022\033\n\023destination_addres"
    "s\030\021 \002(\005\022\017\n\007command\030\022 \002(\005\022\014\n\004arg1\030\023 \002(\005\022\014"
    "\n\004arg2\030\024 \002(\005\022\017\n\007payload\030< \003(\005\032\032\n\006DoPing\022"
    "\020\n\005value\030\026 \001(\005:\0010\032(\n\021DoGetOrSetAddress\022\023"
    "\n\013new_address\030\030 \001(\005\032\r\n\013DoDropState\032|\n\022Do"
    "ChangeSavedState\022\021\n\tclient_id\030\033 \002(\005\022\016\n\006o"
    "ffset\030\034 \002(\005\022\021\n\tnew_value\030\035 \001(\005\022\026\n\013bits_t"
    "o_set\030\036 \001(\005:\0010\022\030\n\rbits_to_clear\030\037 \001(\005:\0010"
    "\032B\n\022DoSendRawCanPacket\022\023\n\004wait\030! \001(\010:\005fa"
    "lse\022\t\n\001d\030\" \003(\005\022\014\n\004data\030# \001(\t\032l\n\021DoReflas"
    "hAutomata\022\033\n\023destination_address\030% \002(\005\022\026"
    "\n\016signal_address\030= \001(\005\022\024\n\006offset\030& \001(\005:\004"
    "3328\022\014\n\004data\030\' \003(\005\032\014\n\nDoGetLokDb\032\033\n\rDoGe"
    "tLokState\022\n\n\002id\030+ \001(\005\032\031\n\013DoEStopLoco\022\n\n\002"
    "id\030. \002(\005\032%\n\tDoPicMisc\022\013\n\003cmd\0300 \002(\005\022\013\n\003ar"
    "g\0301 \003(\005\032\034\n\014DoReflashPic\022\014\n\004data\0303 \003(\005\032\?\n"
    "\014DoGetOrSetCV\022\024\n\010train_id\0305 \001(\005:\00263\022\n\n\002c"
    "v\0306 \002(\005\022\r\n\005value\0307 \001(\005\0320\n\017DoWaitForChang"
    "e\022\021\n\ttimestamp\0309 \002(\004\022\n\n\002id\030: \001(\005\"\212\r\n\024Tra"
    "inControlResponse\0221\n\005speed\030\001 \001(\n2\".serve"
    "r.TrainControlResponse.Speed\0229\n\taccessor"
    "y\030\004 \001(\n2&.server.TrainControlResponse.Ac"
    "cessory\022A\n\remergencystop\030\010 \001(\n2*.server."
    "TrainControlResponse.EmergencyStop\022=\n\013rp"
    "cresponse\030\020 \001(\n2(.server.TrainControlRes"
    "ponse.RpcResponse\022/\n\004pong\030\023 \001(\n2!.server"
    ".TrainControlResponse.Pong\022C\n\016currentadd"
    "ress\030\025 \001(\n2+.server.TrainControlResponse"
    ".CurrentAddress\022\?\n\014rawcanpacket\030\027 \001(\n2)."
    "server.TrainControlResponse.RawCanPacket"
    "\022E\n\017reflashautomata\030\033 \001(\n2,.server.Train"
    "ControlResponse.ReflashAutomata\0221\n\005lokdb"
    "\030\034 \001(\n2\".server.TrainControlResponse.Lok"
    "Db\022\'\n\010lokstate\030$ \003(\0132\025.server.LokStatePr"
    "oto\0225\n\007picmisc\030% \001(\n2$.server.TrainContr"
    "olResponse.PicMisc\022;\n\nreflashpic\030+ \001(\n2\'"
    ".server.TrainControlResponse.ReflashPic\022"
    "+\n\002cv\030- \001(\n2\037.server.TrainControlRespons"
    "e.Cv\022Q\n\025waitforchangeresponse\0304 \001(\n22.se"
    "rver.TrainControlResponse.WaitForChangeR"
    "esponse\032E\n\005Speed\022\n\n\002id\030\002 \002(\005\022\016\n\003dir\030\031 \001("
    "\005:\0011\022\r\n\005speed\030\003 \002(\005\022\021\n\ttimestamp\0302 \001(\004\032U"
    "\n\tAccessory\022\020\n\010train_id\030\005 \002(\005\022\024\n\014accesso"
    "ry_id\030\006 \002(\005\022\r\n\005value\030\007 \002(\005\022\021\n\ttimestamp\030"
    "3 \001(\004\032\035\n\rEmergencyStop\022\014\n\004stop\030\t \002(\010\0320\n\013"
    "RpcResponse\022\017\n\007success\030\021 \002(\010\022\020\n\010response"
    "\030\022 \002(\005\032\025\n\004Pong\022\r\n\005value\030\024 \002(\005\032!\n\016Current"
    "Address\022\017\n\007address\030\026 \002(\005\032\034\n\014RawCanPacket"
    "\022\014\n\004data\030\030 \003(\005\032 \n\017ReflashAutomata\022\r\n\005err"
    "or\030\032 \001(\t\032\330\001\n\005LokDb\0223\n\003lok\030\035 \003(\n2&.server"
    ".TrainControlResponse.LokDb.Lok\032\231\001\n\003Lok\022"
    "\n\n\002id\030\036 \002(\005\022\014\n\004name\030\037 \001(\t\022\017\n\007address\030  \001"
    "(\005\022A\n\010function\030! \003(\n2/.server.TrainContr"
    "olResponse.LokDb.Lok.Function\032$\n\010Functio"
    "n\022\n\n\002id\030\" \002(\005\022\014\n\004type\030# \001(\005\032T\n\007PicMisc\022\013"
    "\n\003cmd\030& \002(\005\022\016\n\006status\030\' \002(\005\022\014\n\004arg1\030( \002("
    "\005\022\014\n\004arg2\030) \002(\005\022\020\n\010more_arg\030* \003(\005\032\033\n\nRef"
    "lashPic\022\r\n\005error\030, \001(\t\032E\n\002Cv\022\020\n\010train_id"
    "\030. \002(\005\022\n\n\002cv\030/ \002(\005\022\022\n\nerror_code\0300 \001(\005\022\r"
    "\n\005value\0301 \001(\005\0326\n\025WaitForChangeResponse\022\021"
    "\n\ttimestamp\0305 \002(\004\022\n\n\002id\0306 \001(\005\"J\n\016TinyRpc"
    "Request\022\n\n\002id\030\001 \002(\005\022,\n\007request\030\002 \002(\0132\033.s"
    "erver.TrainControlRequest\"z\n\017TinyRpcResp"
    "onse\022\n\n\002id\030\001 \002(\005\022.\n\010response\030\004 \001(\0132\034.ser"
    "ver.TrainControlResponse\022\025\n\006failed\030\002 \001(\010"
    ":\005false\022\024\n\014error_detail\030\003 \001(\t2b\n\023TrainCo"
    "ntrolService\022K\n\014TrainControl\022\033.server.Tr"
    "ainControlRequest\032\034.server.TrainControlR"
    "esponse\"\000", 4289);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "train_control.proto", &protobuf_RegisterTypes);
  LokStateProto::default_instance_ = new LokStateProto();
  LokStateProto_Function::default_instance_ = new LokStateProto_Function();
  TrainControlRequest::default_instance_ = new TrainControlRequest();
  TrainControlRequest_DoSetSpeed::default_instance_ = new TrainControlRequest_DoSetSpeed();
  TrainControlRequest_DoSetAccessory::default_instance_ = new TrainControlRequest_DoSetAccessory();
  TrainControlRequest_DoSetEmergencyStop::default_instance_ = new TrainControlRequest_DoSetEmergencyStop();
  TrainControlRequest_DoRpc::default_instance_ = new TrainControlRequest_DoRpc();
  TrainControlRequest_DoPing::default_instance_ = new TrainControlRequest_DoPing();
  TrainControlRequest_DoGetOrSetAddress::default_instance_ = new TrainControlRequest_DoGetOrSetAddress();
  TrainControlRequest_DoDropState::default_instance_ = new TrainControlRequest_DoDropState();
  TrainControlRequest_DoChangeSavedState::default_instance_ = new TrainControlRequest_DoChangeSavedState();
  TrainControlRequest_DoSendRawCanPacket::default_instance_ = new TrainControlRequest_DoSendRawCanPacket();
  TrainControlRequest_DoReflashAutomata::default_instance_ = new TrainControlRequest_DoReflashAutomata();
  TrainControlRequest_DoGetLokDb::default_instance_ = new TrainControlRequest_DoGetLokDb();
  TrainControlRequest_DoGetLokState::default_instance_ = new TrainControlRequest_DoGetLokState();
  TrainControlRequest_DoEStopLoco::default_instance_ = new TrainControlRequest_DoEStopLoco();
  TrainControlRequest_DoPicMisc::default_instance_ = new TrainControlRequest_DoPicMisc();
  TrainControlRequest_DoReflashPic::default_instance_ = new TrainControlRequest_DoReflashPic();
  TrainControlRequest_DoGetOrSetCV::default_instance_ = new TrainControlRequest_DoGetOrSetCV();
  TrainControlRequest_DoWaitForChange::default_instance_ = new TrainControlRequest_DoWaitForChange();
  TrainControlResponse::default_instance_ = new TrainControlResponse();
  TrainControlResponse_Speed::default_instance_ = new TrainControlResponse_Speed();
  TrainControlResponse_Accessory::default_instance_ = new TrainControlResponse_Accessory();
  TrainControlResponse_EmergencyStop::default_instance_ = new TrainControlResponse_EmergencyStop();
  TrainControlResponse_RpcResponse::default_instance_ = new TrainControlResponse_RpcResponse();
  TrainControlResponse_Pong::default_instance_ = new TrainControlResponse_Pong();
  TrainControlResponse_CurrentAddress::default_instance_ = new TrainControlResponse_CurrentAddress();
  TrainControlResponse_RawCanPacket::default_instance_ = new TrainControlResponse_RawCanPacket();
  TrainControlResponse_ReflashAutomata::default_instance_ = new TrainControlResponse_ReflashAutomata();
  TrainControlResponse_LokDb::default_instance_ = new TrainControlResponse_LokDb();
  TrainControlResponse_LokDb_Lok::default_instance_ = new TrainControlResponse_LokDb_Lok();
  TrainControlResponse_LokDb_Lok_Function::default_instance_ = new TrainControlResponse_LokDb_Lok_Function();
  TrainControlResponse_PicMisc::default_instance_ = new TrainControlResponse_PicMisc();
  TrainControlResponse_ReflashPic::default_instance_ = new TrainControlResponse_ReflashPic();
  TrainControlResponse_Cv::default_instance_ = new TrainControlResponse_Cv();
  TrainControlResponse_WaitForChangeResponse::default_instance_ = new TrainControlResponse_WaitForChangeResponse();
  TinyRpcRequest::default_instance_ = new TinyRpcRequest();
  TinyRpcResponse::default_instance_ = new TinyRpcResponse();
  LokStateProto::default_instance_->InitAsDefaultInstance();
  LokStateProto_Function::default_instance_->InitAsDefaultInstance();
  TrainControlRequest::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoSetSpeed::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoSetAccessory::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoSetEmergencyStop::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoRpc::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoPing::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoGetOrSetAddress::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoDropState::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoChangeSavedState::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoSendRawCanPacket::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoReflashAutomata::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoGetLokDb::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoGetLokState::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoEStopLoco::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoPicMisc::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoReflashPic::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoGetOrSetCV::default_instance_->InitAsDefaultInstance();
  TrainControlRequest_DoWaitForChange::default_instance_->InitAsDefaultInstance();
  TrainControlResponse::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_Speed::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_Accessory::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_EmergencyStop::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_RpcResponse::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_Pong::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_CurrentAddress::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_RawCanPacket::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_ReflashAutomata::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_LokDb::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_LokDb_Lok::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_LokDb_Lok_Function::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_PicMisc::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_ReflashPic::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_Cv::default_instance_->InitAsDefaultInstance();
  TrainControlResponse_WaitForChangeResponse::default_instance_->InitAsDefaultInstance();
  TinyRpcRequest::default_instance_->InitAsDefaultInstance();
  TinyRpcResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_train_5fcontrol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_train_5fcontrol_2eproto {
  StaticDescriptorInitializer_train_5fcontrol_2eproto() {
    protobuf_AddDesc_train_5fcontrol_2eproto();
  }
} static_descriptor_initializer_train_5fcontrol_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LokStateProto_Function::kIdFieldNumber;
const int LokStateProto_Function::kValueFieldNumber;
const int LokStateProto_Function::kTsFieldNumber;
#endif  // !_MSC_VER

LokStateProto_Function::LokStateProto_Function()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LokStateProto_Function::InitAsDefaultInstance() {
}

LokStateProto_Function::LokStateProto_Function(const LokStateProto_Function& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LokStateProto_Function::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  value_ = 0;
  ts_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LokStateProto_Function::~LokStateProto_Function() {
  SharedDtor();
}

void LokStateProto_Function::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LokStateProto_Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LokStateProto_Function::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LokStateProto_Function_descriptor_;
}

const LokStateProto_Function& LokStateProto_Function::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

LokStateProto_Function* LokStateProto_Function::default_instance_ = NULL;

LokStateProto_Function* LokStateProto_Function::New() const {
  return new LokStateProto_Function;
}

void LokStateProto_Function::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    value_ = 0;
    ts_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LokStateProto_Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_value;
        break;
      }

      // optional int32 value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_ts;
        break;
      }

      // optional int64 ts = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LokStateProto_Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 5;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->id(), output);
  }

  // optional int32 value = 6;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->value(), output);
  }

  // optional int64 ts = 8;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LokStateProto_Function::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 5;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->id(), target);
  }

  // optional int32 value = 6;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->value(), target);
  }

  // optional int64 ts = 8;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LokStateProto_Function::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 5;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 value = 6;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional int64 ts = 8;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ts());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LokStateProto_Function::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LokStateProto_Function* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LokStateProto_Function*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LokStateProto_Function::MergeFrom(const LokStateProto_Function& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LokStateProto_Function::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LokStateProto_Function::CopyFrom(const LokStateProto_Function& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LokStateProto_Function::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void LokStateProto_Function::Swap(LokStateProto_Function* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(value_, other->value_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LokStateProto_Function::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LokStateProto_Function_descriptor_;
  metadata.reflection = LokStateProto_Function_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int LokStateProto::kIdFieldNumber;
const int LokStateProto::kDirFieldNumber;
const int LokStateProto::kSpeedFieldNumber;
const int LokStateProto::kSpeedTsFieldNumber;
const int LokStateProto::kFunctionFieldNumber;
const int LokStateProto::kTsFieldNumber;
#endif  // !_MSC_VER

LokStateProto::LokStateProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LokStateProto::InitAsDefaultInstance() {
}

LokStateProto::LokStateProto(const LokStateProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LokStateProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  dir_ = 1;
  speed_ = 0;
  speed_ts_ = GOOGLE_LONGLONG(0);
  ts_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LokStateProto::~LokStateProto() {
  SharedDtor();
}

void LokStateProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LokStateProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LokStateProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LokStateProto_descriptor_;
}

const LokStateProto& LokStateProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

LokStateProto* LokStateProto::default_instance_ = NULL;

LokStateProto* LokStateProto::New() const {
  return new LokStateProto;
}

void LokStateProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    dir_ = 1;
    speed_ = 0;
    speed_ts_ = GOOGLE_LONGLONG(0);
    ts_ = GOOGLE_LONGLONG(0);
  }
  function_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LokStateProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_dir;
        break;
      }

      // optional int32 dir = 2 [default = 1];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_speed;
        break;
      }

      // optional int32 speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(35)) goto parse_function;
        break;
      }

      // repeated group Function = 4 {
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, add_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(35)) goto parse_function;
        if (input->ExpectTag(56)) goto parse_ts;
        break;
      }

      // optional int64 ts = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ts_)));
          set_has_ts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_speed_ts;
        break;
      }

      // optional int64 speed_ts = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speed_ts:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &speed_ts_)));
          set_has_speed_ts();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LokStateProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 dir = 2 [default = 1];
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->dir(), output);
  }

  // optional int32 speed = 3;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }

  // repeated group Function = 4 {
  for (int i = 0; i < this->function_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, this->function(i), output);
  }

  // optional int64 ts = 7;
  if (has_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->ts(), output);
  }

  // optional int64 speed_ts = 9;
  if (has_speed_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->speed_ts(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LokStateProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 dir = 2 [default = 1];
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->dir(), target);
  }

  // optional int32 speed = 3;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }

  // repeated group Function = 4 {
  for (int i = 0; i < this->function_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        4, this->function(i), target);
  }

  // optional int64 ts = 7;
  if (has_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->ts(), target);
  }

  // optional int64 speed_ts = 9;
  if (has_speed_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->speed_ts(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LokStateProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 dir = 2 [default = 1];
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dir());
    }

    // optional int32 speed = 3;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

    // optional int64 speed_ts = 9;
    if (has_speed_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->speed_ts());
    }

    // optional int64 ts = 7;
    if (has_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ts());
    }

  }
  // repeated group Function = 4 {
  total_size += 2 * this->function_size();
  for (int i = 0; i < this->function_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->function(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LokStateProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LokStateProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LokStateProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LokStateProto::MergeFrom(const LokStateProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  function_.MergeFrom(from.function_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_speed_ts()) {
      set_speed_ts(from.speed_ts());
    }
    if (from.has_ts()) {
      set_ts(from.ts());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LokStateProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LokStateProto::CopyFrom(const LokStateProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LokStateProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < function_size(); i++) {
    if (!this->function(i).IsInitialized()) return false;
  }
  return true;
}

void LokStateProto::Swap(LokStateProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(dir_, other->dir_);
    std::swap(speed_, other->speed_);
    std::swap(speed_ts_, other->speed_ts_);
    function_.Swap(&other->function_);
    std::swap(ts_, other->ts_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LokStateProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LokStateProto_descriptor_;
  metadata.reflection = LokStateProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrainControlRequest_DoSetSpeed::kIdFieldNumber;
const int TrainControlRequest_DoSetSpeed::kDirFieldNumber;
const int TrainControlRequest_DoSetSpeed::kSpeedFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoSetSpeed::TrainControlRequest_DoSetSpeed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoSetSpeed::InitAsDefaultInstance() {
}

TrainControlRequest_DoSetSpeed::TrainControlRequest_DoSetSpeed(const TrainControlRequest_DoSetSpeed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoSetSpeed::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  dir_ = 1;
  speed_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoSetSpeed::~TrainControlRequest_DoSetSpeed() {
  SharedDtor();
}

void TrainControlRequest_DoSetSpeed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoSetSpeed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetSpeed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoSetSpeed_descriptor_;
}

const TrainControlRequest_DoSetSpeed& TrainControlRequest_DoSetSpeed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoSetSpeed* TrainControlRequest_DoSetSpeed::default_instance_ = NULL;

TrainControlRequest_DoSetSpeed* TrainControlRequest_DoSetSpeed::New() const {
  return new TrainControlRequest_DoSetSpeed;
}

void TrainControlRequest_DoSetSpeed::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    dir_ = 1;
    speed_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoSetSpeed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_speed;
        break;
      }

      // optional int32 speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_dir;
        break;
      }

      // optional int32 dir = 36 [default = 1];
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoSetSpeed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // optional int32 speed = 3;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }

  // optional int32 dir = 36 [default = 1];
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(36, this->dir(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoSetSpeed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // optional int32 speed = 3;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }

  // optional int32 dir = 36 [default = 1];
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(36, this->dir(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoSetSpeed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 dir = 36 [default = 1];
    if (has_dir()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dir());
    }

    // optional int32 speed = 3;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoSetSpeed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoSetSpeed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoSetSpeed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoSetSpeed::MergeFrom(const TrainControlRequest_DoSetSpeed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoSetSpeed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoSetSpeed::CopyFrom(const TrainControlRequest_DoSetSpeed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoSetSpeed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlRequest_DoSetSpeed::Swap(TrainControlRequest_DoSetSpeed* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(dir_, other->dir_);
    std::swap(speed_, other->speed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoSetSpeed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoSetSpeed_descriptor_;
  metadata.reflection = TrainControlRequest_DoSetSpeed_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoSetAccessory::kTrainIdFieldNumber;
const int TrainControlRequest_DoSetAccessory::kAccessoryIdFieldNumber;
const int TrainControlRequest_DoSetAccessory::kValueFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoSetAccessory::TrainControlRequest_DoSetAccessory()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoSetAccessory::InitAsDefaultInstance() {
}

TrainControlRequest_DoSetAccessory::TrainControlRequest_DoSetAccessory(const TrainControlRequest_DoSetAccessory& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoSetAccessory::SharedCtor() {
  _cached_size_ = 0;
  train_id_ = 0;
  accessory_id_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoSetAccessory::~TrainControlRequest_DoSetAccessory() {
  SharedDtor();
}

void TrainControlRequest_DoSetAccessory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoSetAccessory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetAccessory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoSetAccessory_descriptor_;
}

const TrainControlRequest_DoSetAccessory& TrainControlRequest_DoSetAccessory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoSetAccessory* TrainControlRequest_DoSetAccessory::default_instance_ = NULL;

TrainControlRequest_DoSetAccessory* TrainControlRequest_DoSetAccessory::New() const {
  return new TrainControlRequest_DoSetAccessory;
}

void TrainControlRequest_DoSetAccessory::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    train_id_ = 0;
    accessory_id_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoSetAccessory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 train_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_id_)));
          set_has_train_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_accessory_id;
        break;
      }

      // required int32 accessory_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accessory_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accessory_id_)));
          set_has_accessory_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_value;
        break;
      }

      // optional int32 value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoSetAccessory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 train_id = 5;
  if (has_train_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->train_id(), output);
  }

  // required int32 accessory_id = 6;
  if (has_accessory_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->accessory_id(), output);
  }

  // optional int32 value = 7;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoSetAccessory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 train_id = 5;
  if (has_train_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->train_id(), target);
  }

  // required int32 accessory_id = 6;
  if (has_accessory_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->accessory_id(), target);
  }

  // optional int32 value = 7;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoSetAccessory::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 train_id = 5;
    if (has_train_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_id());
    }

    // required int32 accessory_id = 6;
    if (has_accessory_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accessory_id());
    }

    // optional int32 value = 7;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoSetAccessory::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoSetAccessory* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoSetAccessory*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoSetAccessory::MergeFrom(const TrainControlRequest_DoSetAccessory& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_train_id()) {
      set_train_id(from.train_id());
    }
    if (from.has_accessory_id()) {
      set_accessory_id(from.accessory_id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoSetAccessory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoSetAccessory::CopyFrom(const TrainControlRequest_DoSetAccessory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoSetAccessory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TrainControlRequest_DoSetAccessory::Swap(TrainControlRequest_DoSetAccessory* other) {
  if (other != this) {
    std::swap(train_id_, other->train_id_);
    std::swap(accessory_id_, other->accessory_id_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoSetAccessory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoSetAccessory_descriptor_;
  metadata.reflection = TrainControlRequest_DoSetAccessory_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoSetEmergencyStop::kStopFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoSetEmergencyStop::TrainControlRequest_DoSetEmergencyStop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoSetEmergencyStop::InitAsDefaultInstance() {
}

TrainControlRequest_DoSetEmergencyStop::TrainControlRequest_DoSetEmergencyStop(const TrainControlRequest_DoSetEmergencyStop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoSetEmergencyStop::SharedCtor() {
  _cached_size_ = 0;
  stop_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoSetEmergencyStop::~TrainControlRequest_DoSetEmergencyStop() {
  SharedDtor();
}

void TrainControlRequest_DoSetEmergencyStop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoSetEmergencyStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoSetEmergencyStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoSetEmergencyStop_descriptor_;
}

const TrainControlRequest_DoSetEmergencyStop& TrainControlRequest_DoSetEmergencyStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoSetEmergencyStop* TrainControlRequest_DoSetEmergencyStop::default_instance_ = NULL;

TrainControlRequest_DoSetEmergencyStop* TrainControlRequest_DoSetEmergencyStop::New() const {
  return new TrainControlRequest_DoSetEmergencyStop;
}

void TrainControlRequest_DoSetEmergencyStop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stop_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoSetEmergencyStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool stop = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
          set_has_stop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoSetEmergencyStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool stop = 9;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->stop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoSetEmergencyStop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool stop = 9;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->stop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoSetEmergencyStop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool stop = 9;
    if (has_stop()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoSetEmergencyStop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoSetEmergencyStop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoSetEmergencyStop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoSetEmergencyStop::MergeFrom(const TrainControlRequest_DoSetEmergencyStop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stop()) {
      set_stop(from.stop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoSetEmergencyStop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoSetEmergencyStop::CopyFrom(const TrainControlRequest_DoSetEmergencyStop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoSetEmergencyStop::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoSetEmergencyStop::Swap(TrainControlRequest_DoSetEmergencyStop* other) {
  if (other != this) {
    std::swap(stop_, other->stop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoSetEmergencyStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoSetEmergencyStop_descriptor_;
  metadata.reflection = TrainControlRequest_DoSetEmergencyStop_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoRpc::kDestinationAddressFieldNumber;
const int TrainControlRequest_DoRpc::kCommandFieldNumber;
const int TrainControlRequest_DoRpc::kArg1FieldNumber;
const int TrainControlRequest_DoRpc::kArg2FieldNumber;
const int TrainControlRequest_DoRpc::kPayloadFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoRpc::TrainControlRequest_DoRpc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoRpc::InitAsDefaultInstance() {
}

TrainControlRequest_DoRpc::TrainControlRequest_DoRpc(const TrainControlRequest_DoRpc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoRpc::SharedCtor() {
  _cached_size_ = 0;
  destination_address_ = 0;
  command_ = 0;
  arg1_ = 0;
  arg2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoRpc::~TrainControlRequest_DoRpc() {
  SharedDtor();
}

void TrainControlRequest_DoRpc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoRpc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoRpc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoRpc_descriptor_;
}

const TrainControlRequest_DoRpc& TrainControlRequest_DoRpc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoRpc* TrainControlRequest_DoRpc::default_instance_ = NULL;

TrainControlRequest_DoRpc* TrainControlRequest_DoRpc::New() const {
  return new TrainControlRequest_DoRpc;
}

void TrainControlRequest_DoRpc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    destination_address_ = 0;
    command_ = 0;
    arg1_ = 0;
    arg2_ = 0;
  }
  payload_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoRpc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 destination_address = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destination_address_)));
          set_has_destination_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_command;
        break;
      }

      // required int32 command = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_command:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
          set_has_command();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_arg1;
        break;
      }

      // required int32 arg1 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg1_)));
          set_has_arg1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_arg2;
        break;
      }

      // required int32 arg2 = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg2_)));
          set_has_arg2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(480)) goto parse_payload;
        break;
      }

      // repeated int32 payload = 60;
      case 60: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_payload:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 480, input, this->mutable_payload())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_payload())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(480)) goto parse_payload;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoRpc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 destination_address = 17;
  if (has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->destination_address(), output);
  }

  // required int32 command = 18;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->command(), output);
  }

  // required int32 arg1 = 19;
  if (has_arg1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->arg1(), output);
  }

  // required int32 arg2 = 20;
  if (has_arg2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->arg2(), output);
  }

  // repeated int32 payload = 60;
  for (int i = 0; i < this->payload_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      60, this->payload(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoRpc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 destination_address = 17;
  if (has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->destination_address(), target);
  }

  // required int32 command = 18;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->command(), target);
  }

  // required int32 arg1 = 19;
  if (has_arg1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->arg1(), target);
  }

  // required int32 arg2 = 20;
  if (has_arg2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->arg2(), target);
  }

  // repeated int32 payload = 60;
  for (int i = 0; i < this->payload_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(60, this->payload(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoRpc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 destination_address = 17;
    if (has_destination_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destination_address());
    }

    // required int32 command = 18;
    if (has_command()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->command());
    }

    // required int32 arg1 = 19;
    if (has_arg1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arg1());
    }

    // required int32 arg2 = 20;
    if (has_arg2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arg2());
    }

  }
  // repeated int32 payload = 60;
  {
    int data_size = 0;
    for (int i = 0; i < this->payload_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->payload(i));
    }
    total_size += 2 * this->payload_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoRpc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoRpc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoRpc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoRpc::MergeFrom(const TrainControlRequest_DoRpc& from) {
  GOOGLE_CHECK_NE(&from, this);
  payload_.MergeFrom(from.payload_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_destination_address()) {
      set_destination_address(from.destination_address());
    }
    if (from.has_command()) {
      set_command(from.command());
    }
    if (from.has_arg1()) {
      set_arg1(from.arg1());
    }
    if (from.has_arg2()) {
      set_arg2(from.arg2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoRpc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoRpc::CopyFrom(const TrainControlRequest_DoRpc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoRpc::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void TrainControlRequest_DoRpc::Swap(TrainControlRequest_DoRpc* other) {
  if (other != this) {
    std::swap(destination_address_, other->destination_address_);
    std::swap(command_, other->command_);
    std::swap(arg1_, other->arg1_);
    std::swap(arg2_, other->arg2_);
    payload_.Swap(&other->payload_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoRpc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoRpc_descriptor_;
  metadata.reflection = TrainControlRequest_DoRpc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoPing::kValueFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoPing::TrainControlRequest_DoPing()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoPing::InitAsDefaultInstance() {
}

TrainControlRequest_DoPing::TrainControlRequest_DoPing(const TrainControlRequest_DoPing& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoPing::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoPing::~TrainControlRequest_DoPing() {
  SharedDtor();
}

void TrainControlRequest_DoPing::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoPing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoPing::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoPing_descriptor_;
}

const TrainControlRequest_DoPing& TrainControlRequest_DoPing::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoPing* TrainControlRequest_DoPing::default_instance_ = NULL;

TrainControlRequest_DoPing* TrainControlRequest_DoPing::New() const {
  return new TrainControlRequest_DoPing;
}

void TrainControlRequest_DoPing::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoPing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 value = 22 [default = 0];
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoPing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 value = 22 [default = 0];
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoPing::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 value = 22 [default = 0];
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoPing::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 value = 22 [default = 0];
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoPing::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoPing* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoPing*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoPing::MergeFrom(const TrainControlRequest_DoPing& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoPing::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoPing::CopyFrom(const TrainControlRequest_DoPing& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoPing::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoPing::Swap(TrainControlRequest_DoPing* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoPing::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoPing_descriptor_;
  metadata.reflection = TrainControlRequest_DoPing_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoGetOrSetAddress::kNewAddressFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoGetOrSetAddress::TrainControlRequest_DoGetOrSetAddress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoGetOrSetAddress::InitAsDefaultInstance() {
}

TrainControlRequest_DoGetOrSetAddress::TrainControlRequest_DoGetOrSetAddress(const TrainControlRequest_DoGetOrSetAddress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoGetOrSetAddress::SharedCtor() {
  _cached_size_ = 0;
  new_address_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoGetOrSetAddress::~TrainControlRequest_DoGetOrSetAddress() {
  SharedDtor();
}

void TrainControlRequest_DoGetOrSetAddress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoGetOrSetAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetOrSetAddress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoGetOrSetAddress_descriptor_;
}

const TrainControlRequest_DoGetOrSetAddress& TrainControlRequest_DoGetOrSetAddress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoGetOrSetAddress* TrainControlRequest_DoGetOrSetAddress::default_instance_ = NULL;

TrainControlRequest_DoGetOrSetAddress* TrainControlRequest_DoGetOrSetAddress::New() const {
  return new TrainControlRequest_DoGetOrSetAddress;
}

void TrainControlRequest_DoGetOrSetAddress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    new_address_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoGetOrSetAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 new_address = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_address_)));
          set_has_new_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoGetOrSetAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 new_address = 24;
  if (has_new_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->new_address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoGetOrSetAddress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 new_address = 24;
  if (has_new_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->new_address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoGetOrSetAddress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 new_address = 24;
    if (has_new_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoGetOrSetAddress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoGetOrSetAddress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoGetOrSetAddress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoGetOrSetAddress::MergeFrom(const TrainControlRequest_DoGetOrSetAddress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_new_address()) {
      set_new_address(from.new_address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoGetOrSetAddress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoGetOrSetAddress::CopyFrom(const TrainControlRequest_DoGetOrSetAddress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoGetOrSetAddress::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoGetOrSetAddress::Swap(TrainControlRequest_DoGetOrSetAddress* other) {
  if (other != this) {
    std::swap(new_address_, other->new_address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoGetOrSetAddress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoGetOrSetAddress_descriptor_;
  metadata.reflection = TrainControlRequest_DoGetOrSetAddress_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

TrainControlRequest_DoDropState::TrainControlRequest_DoDropState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoDropState::InitAsDefaultInstance() {
}

TrainControlRequest_DoDropState::TrainControlRequest_DoDropState(const TrainControlRequest_DoDropState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoDropState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoDropState::~TrainControlRequest_DoDropState() {
  SharedDtor();
}

void TrainControlRequest_DoDropState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoDropState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoDropState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoDropState_descriptor_;
}

const TrainControlRequest_DoDropState& TrainControlRequest_DoDropState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoDropState* TrainControlRequest_DoDropState::default_instance_ = NULL;

TrainControlRequest_DoDropState* TrainControlRequest_DoDropState::New() const {
  return new TrainControlRequest_DoDropState;
}

void TrainControlRequest_DoDropState::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoDropState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoDropState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoDropState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoDropState::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoDropState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoDropState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoDropState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoDropState::MergeFrom(const TrainControlRequest_DoDropState& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoDropState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoDropState::CopyFrom(const TrainControlRequest_DoDropState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoDropState::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoDropState::Swap(TrainControlRequest_DoDropState* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoDropState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoDropState_descriptor_;
  metadata.reflection = TrainControlRequest_DoDropState_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoChangeSavedState::kClientIdFieldNumber;
const int TrainControlRequest_DoChangeSavedState::kOffsetFieldNumber;
const int TrainControlRequest_DoChangeSavedState::kNewValueFieldNumber;
const int TrainControlRequest_DoChangeSavedState::kBitsToSetFieldNumber;
const int TrainControlRequest_DoChangeSavedState::kBitsToClearFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoChangeSavedState::TrainControlRequest_DoChangeSavedState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoChangeSavedState::InitAsDefaultInstance() {
}

TrainControlRequest_DoChangeSavedState::TrainControlRequest_DoChangeSavedState(const TrainControlRequest_DoChangeSavedState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoChangeSavedState::SharedCtor() {
  _cached_size_ = 0;
  client_id_ = 0;
  offset_ = 0;
  new_value_ = 0;
  bits_to_set_ = 0;
  bits_to_clear_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoChangeSavedState::~TrainControlRequest_DoChangeSavedState() {
  SharedDtor();
}

void TrainControlRequest_DoChangeSavedState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoChangeSavedState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoChangeSavedState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoChangeSavedState_descriptor_;
}

const TrainControlRequest_DoChangeSavedState& TrainControlRequest_DoChangeSavedState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoChangeSavedState* TrainControlRequest_DoChangeSavedState::default_instance_ = NULL;

TrainControlRequest_DoChangeSavedState* TrainControlRequest_DoChangeSavedState::New() const {
  return new TrainControlRequest_DoChangeSavedState;
}

void TrainControlRequest_DoChangeSavedState::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    client_id_ = 0;
    offset_ = 0;
    new_value_ = 0;
    bits_to_set_ = 0;
    bits_to_clear_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoChangeSavedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 client_id = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_id_)));
          set_has_client_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_offset;
        break;
      }

      // required int32 offset = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_new_value;
        break;
      }

      // optional int32 new_value = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_new_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &new_value_)));
          set_has_new_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(240)) goto parse_bits_to_set;
        break;
      }

      // optional int32 bits_to_set = 30 [default = 0];
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bits_to_set:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_to_set_)));
          set_has_bits_to_set();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_bits_to_clear;
        break;
      }

      // optional int32 bits_to_clear = 31 [default = 0];
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bits_to_clear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_to_clear_)));
          set_has_bits_to_clear();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoChangeSavedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 client_id = 27;
  if (has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->client_id(), output);
  }

  // required int32 offset = 28;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->offset(), output);
  }

  // optional int32 new_value = 29;
  if (has_new_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(29, this->new_value(), output);
  }

  // optional int32 bits_to_set = 30 [default = 0];
  if (has_bits_to_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->bits_to_set(), output);
  }

  // optional int32 bits_to_clear = 31 [default = 0];
  if (has_bits_to_clear()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(31, this->bits_to_clear(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoChangeSavedState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 client_id = 27;
  if (has_client_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->client_id(), target);
  }

  // required int32 offset = 28;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->offset(), target);
  }

  // optional int32 new_value = 29;
  if (has_new_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(29, this->new_value(), target);
  }

  // optional int32 bits_to_set = 30 [default = 0];
  if (has_bits_to_set()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->bits_to_set(), target);
  }

  // optional int32 bits_to_clear = 31 [default = 0];
  if (has_bits_to_clear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(31, this->bits_to_clear(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoChangeSavedState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 client_id = 27;
    if (has_client_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->client_id());
    }

    // required int32 offset = 28;
    if (has_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

    // optional int32 new_value = 29;
    if (has_new_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->new_value());
    }

    // optional int32 bits_to_set = 30 [default = 0];
    if (has_bits_to_set()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bits_to_set());
    }

    // optional int32 bits_to_clear = 31 [default = 0];
    if (has_bits_to_clear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bits_to_clear());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoChangeSavedState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoChangeSavedState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoChangeSavedState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoChangeSavedState::MergeFrom(const TrainControlRequest_DoChangeSavedState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_client_id()) {
      set_client_id(from.client_id());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
    if (from.has_new_value()) {
      set_new_value(from.new_value());
    }
    if (from.has_bits_to_set()) {
      set_bits_to_set(from.bits_to_set());
    }
    if (from.has_bits_to_clear()) {
      set_bits_to_clear(from.bits_to_clear());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoChangeSavedState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoChangeSavedState::CopyFrom(const TrainControlRequest_DoChangeSavedState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoChangeSavedState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TrainControlRequest_DoChangeSavedState::Swap(TrainControlRequest_DoChangeSavedState* other) {
  if (other != this) {
    std::swap(client_id_, other->client_id_);
    std::swap(offset_, other->offset_);
    std::swap(new_value_, other->new_value_);
    std::swap(bits_to_set_, other->bits_to_set_);
    std::swap(bits_to_clear_, other->bits_to_clear_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoChangeSavedState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoChangeSavedState_descriptor_;
  metadata.reflection = TrainControlRequest_DoChangeSavedState_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoSendRawCanPacket::kWaitFieldNumber;
const int TrainControlRequest_DoSendRawCanPacket::kDFieldNumber;
const int TrainControlRequest_DoSendRawCanPacket::kDataFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoSendRawCanPacket::TrainControlRequest_DoSendRawCanPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoSendRawCanPacket::InitAsDefaultInstance() {
}

TrainControlRequest_DoSendRawCanPacket::TrainControlRequest_DoSendRawCanPacket(const TrainControlRequest_DoSendRawCanPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoSendRawCanPacket::SharedCtor() {
  _cached_size_ = 0;
  wait_ = false;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoSendRawCanPacket::~TrainControlRequest_DoSendRawCanPacket() {
  SharedDtor();
}

void TrainControlRequest_DoSendRawCanPacket::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoSendRawCanPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoSendRawCanPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoSendRawCanPacket_descriptor_;
}

const TrainControlRequest_DoSendRawCanPacket& TrainControlRequest_DoSendRawCanPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoSendRawCanPacket* TrainControlRequest_DoSendRawCanPacket::default_instance_ = NULL;

TrainControlRequest_DoSendRawCanPacket* TrainControlRequest_DoSendRawCanPacket::New() const {
  return new TrainControlRequest_DoSendRawCanPacket;
}

void TrainControlRequest_DoSendRawCanPacket::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    wait_ = false;
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  d_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoSendRawCanPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool wait = 33 [default = false];
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
          set_has_wait();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_d;
        break;
      }

      // repeated int32 d = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_d:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 272, input, this->mutable_d())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_d())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_d;
        if (input->ExpectTag(282)) goto parse_data;
        break;
      }

      // optional string data = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoSendRawCanPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bool wait = 33 [default = false];
  if (has_wait()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(33, this->wait(), output);
  }

  // repeated int32 d = 34;
  for (int i = 0; i < this->d_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      34, this->d(i), output);
  }

  // optional string data = 35;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      35, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoSendRawCanPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bool wait = 33 [default = false];
  if (has_wait()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(33, this->wait(), target);
  }

  // repeated int32 d = 34;
  for (int i = 0; i < this->d_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(34, this->d(i), target);
  }

  // optional string data = 35;
  if (has_data()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        35, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoSendRawCanPacket::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bool wait = 33 [default = false];
    if (has_wait()) {
      total_size += 2 + 1;
    }

    // optional string data = 35;
    if (has_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

  }
  // repeated int32 d = 34;
  {
    int data_size = 0;
    for (int i = 0; i < this->d_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->d(i));
    }
    total_size += 2 * this->d_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoSendRawCanPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoSendRawCanPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoSendRawCanPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoSendRawCanPacket::MergeFrom(const TrainControlRequest_DoSendRawCanPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  d_.MergeFrom(from.d_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_wait()) {
      set_wait(from.wait());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoSendRawCanPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoSendRawCanPacket::CopyFrom(const TrainControlRequest_DoSendRawCanPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoSendRawCanPacket::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoSendRawCanPacket::Swap(TrainControlRequest_DoSendRawCanPacket* other) {
  if (other != this) {
    std::swap(wait_, other->wait_);
    d_.Swap(&other->d_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoSendRawCanPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoSendRawCanPacket_descriptor_;
  metadata.reflection = TrainControlRequest_DoSendRawCanPacket_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoReflashAutomata::kDestinationAddressFieldNumber;
const int TrainControlRequest_DoReflashAutomata::kSignalAddressFieldNumber;
const int TrainControlRequest_DoReflashAutomata::kOffsetFieldNumber;
const int TrainControlRequest_DoReflashAutomata::kDataFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoReflashAutomata::TrainControlRequest_DoReflashAutomata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoReflashAutomata::InitAsDefaultInstance() {
}

TrainControlRequest_DoReflashAutomata::TrainControlRequest_DoReflashAutomata(const TrainControlRequest_DoReflashAutomata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoReflashAutomata::SharedCtor() {
  _cached_size_ = 0;
  destination_address_ = 0;
  signal_address_ = 0;
  offset_ = 3328;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoReflashAutomata::~TrainControlRequest_DoReflashAutomata() {
  SharedDtor();
}

void TrainControlRequest_DoReflashAutomata::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoReflashAutomata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoReflashAutomata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoReflashAutomata_descriptor_;
}

const TrainControlRequest_DoReflashAutomata& TrainControlRequest_DoReflashAutomata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoReflashAutomata* TrainControlRequest_DoReflashAutomata::default_instance_ = NULL;

TrainControlRequest_DoReflashAutomata* TrainControlRequest_DoReflashAutomata::New() const {
  return new TrainControlRequest_DoReflashAutomata;
}

void TrainControlRequest_DoReflashAutomata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    destination_address_ = 0;
    signal_address_ = 0;
    offset_ = 3328;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoReflashAutomata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 destination_address = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &destination_address_)));
          set_has_destination_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_offset;
        break;
      }

      // optional int32 offset = 38 [default = 3328];
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_data;
        break;
      }

      // repeated int32 data = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 312, input, this->mutable_data())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_data;
        if (input->ExpectTag(488)) goto parse_signal_address;
        break;
      }

      // optional int32 signal_address = 61;
      case 61: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_signal_address:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &signal_address_)));
          set_has_signal_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoReflashAutomata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 destination_address = 37;
  if (has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(37, this->destination_address(), output);
  }

  // optional int32 offset = 38 [default = 3328];
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->offset(), output);
  }

  // repeated int32 data = 39;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      39, this->data(i), output);
  }

  // optional int32 signal_address = 61;
  if (has_signal_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(61, this->signal_address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoReflashAutomata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 destination_address = 37;
  if (has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(37, this->destination_address(), target);
  }

  // optional int32 offset = 38 [default = 3328];
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->offset(), target);
  }

  // repeated int32 data = 39;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(39, this->data(i), target);
  }

  // optional int32 signal_address = 61;
  if (has_signal_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(61, this->signal_address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoReflashAutomata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 destination_address = 37;
    if (has_destination_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->destination_address());
    }

    // optional int32 signal_address = 61;
    if (has_signal_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->signal_address());
    }

    // optional int32 offset = 38 [default = 3328];
    if (has_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->offset());
    }

  }
  // repeated int32 data = 39;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    total_size += 2 * this->data_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoReflashAutomata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoReflashAutomata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoReflashAutomata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoReflashAutomata::MergeFrom(const TrainControlRequest_DoReflashAutomata& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_destination_address()) {
      set_destination_address(from.destination_address());
    }
    if (from.has_signal_address()) {
      set_signal_address(from.signal_address());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoReflashAutomata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoReflashAutomata::CopyFrom(const TrainControlRequest_DoReflashAutomata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoReflashAutomata::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlRequest_DoReflashAutomata::Swap(TrainControlRequest_DoReflashAutomata* other) {
  if (other != this) {
    std::swap(destination_address_, other->destination_address_);
    std::swap(signal_address_, other->signal_address_);
    std::swap(offset_, other->offset_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoReflashAutomata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoReflashAutomata_descriptor_;
  metadata.reflection = TrainControlRequest_DoReflashAutomata_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

TrainControlRequest_DoGetLokDb::TrainControlRequest_DoGetLokDb()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoGetLokDb::InitAsDefaultInstance() {
}

TrainControlRequest_DoGetLokDb::TrainControlRequest_DoGetLokDb(const TrainControlRequest_DoGetLokDb& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoGetLokDb::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoGetLokDb::~TrainControlRequest_DoGetLokDb() {
  SharedDtor();
}

void TrainControlRequest_DoGetLokDb::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoGetLokDb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetLokDb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoGetLokDb_descriptor_;
}

const TrainControlRequest_DoGetLokDb& TrainControlRequest_DoGetLokDb::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoGetLokDb* TrainControlRequest_DoGetLokDb::default_instance_ = NULL;

TrainControlRequest_DoGetLokDb* TrainControlRequest_DoGetLokDb::New() const {
  return new TrainControlRequest_DoGetLokDb;
}

void TrainControlRequest_DoGetLokDb::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoGetLokDb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoGetLokDb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoGetLokDb::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoGetLokDb::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoGetLokDb::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoGetLokDb* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoGetLokDb*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoGetLokDb::MergeFrom(const TrainControlRequest_DoGetLokDb& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoGetLokDb::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoGetLokDb::CopyFrom(const TrainControlRequest_DoGetLokDb& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoGetLokDb::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoGetLokDb::Swap(TrainControlRequest_DoGetLokDb* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoGetLokDb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoGetLokDb_descriptor_;
  metadata.reflection = TrainControlRequest_DoGetLokDb_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoGetLokState::kIdFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoGetLokState::TrainControlRequest_DoGetLokState()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoGetLokState::InitAsDefaultInstance() {
}

TrainControlRequest_DoGetLokState::TrainControlRequest_DoGetLokState(const TrainControlRequest_DoGetLokState& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoGetLokState::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoGetLokState::~TrainControlRequest_DoGetLokState() {
  SharedDtor();
}

void TrainControlRequest_DoGetLokState::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoGetLokState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetLokState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoGetLokState_descriptor_;
}

const TrainControlRequest_DoGetLokState& TrainControlRequest_DoGetLokState::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoGetLokState* TrainControlRequest_DoGetLokState::default_instance_ = NULL;

TrainControlRequest_DoGetLokState* TrainControlRequest_DoGetLokState::New() const {
  return new TrainControlRequest_DoGetLokState;
}

void TrainControlRequest_DoGetLokState::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoGetLokState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 43;
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoGetLokState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 43;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(43, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoGetLokState::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 43;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(43, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoGetLokState::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 43;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoGetLokState::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoGetLokState* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoGetLokState*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoGetLokState::MergeFrom(const TrainControlRequest_DoGetLokState& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoGetLokState::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoGetLokState::CopyFrom(const TrainControlRequest_DoGetLokState& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoGetLokState::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoGetLokState::Swap(TrainControlRequest_DoGetLokState* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoGetLokState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoGetLokState_descriptor_;
  metadata.reflection = TrainControlRequest_DoGetLokState_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoEStopLoco::kIdFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoEStopLoco::TrainControlRequest_DoEStopLoco()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoEStopLoco::InitAsDefaultInstance() {
}

TrainControlRequest_DoEStopLoco::TrainControlRequest_DoEStopLoco(const TrainControlRequest_DoEStopLoco& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoEStopLoco::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoEStopLoco::~TrainControlRequest_DoEStopLoco() {
  SharedDtor();
}

void TrainControlRequest_DoEStopLoco::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoEStopLoco::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoEStopLoco::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoEStopLoco_descriptor_;
}

const TrainControlRequest_DoEStopLoco& TrainControlRequest_DoEStopLoco::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoEStopLoco* TrainControlRequest_DoEStopLoco::default_instance_ = NULL;

TrainControlRequest_DoEStopLoco* TrainControlRequest_DoEStopLoco::New() const {
  return new TrainControlRequest_DoEStopLoco;
}

void TrainControlRequest_DoEStopLoco::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoEStopLoco::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoEStopLoco::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 46;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoEStopLoco::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 46;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoEStopLoco::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 46;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoEStopLoco::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoEStopLoco* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoEStopLoco*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoEStopLoco::MergeFrom(const TrainControlRequest_DoEStopLoco& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoEStopLoco::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoEStopLoco::CopyFrom(const TrainControlRequest_DoEStopLoco& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoEStopLoco::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlRequest_DoEStopLoco::Swap(TrainControlRequest_DoEStopLoco* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoEStopLoco::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoEStopLoco_descriptor_;
  metadata.reflection = TrainControlRequest_DoEStopLoco_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoPicMisc::kCmdFieldNumber;
const int TrainControlRequest_DoPicMisc::kArgFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoPicMisc::TrainControlRequest_DoPicMisc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoPicMisc::InitAsDefaultInstance() {
}

TrainControlRequest_DoPicMisc::TrainControlRequest_DoPicMisc(const TrainControlRequest_DoPicMisc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoPicMisc::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoPicMisc::~TrainControlRequest_DoPicMisc() {
  SharedDtor();
}

void TrainControlRequest_DoPicMisc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoPicMisc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoPicMisc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoPicMisc_descriptor_;
}

const TrainControlRequest_DoPicMisc& TrainControlRequest_DoPicMisc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoPicMisc* TrainControlRequest_DoPicMisc::default_instance_ = NULL;

TrainControlRequest_DoPicMisc* TrainControlRequest_DoPicMisc::New() const {
  return new TrainControlRequest_DoPicMisc;
}

void TrainControlRequest_DoPicMisc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
  }
  arg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoPicMisc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cmd = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_arg;
        break;
      }

      // repeated int32 arg = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 392, input, this->mutable_arg())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_arg())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_arg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoPicMisc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cmd = 48;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(48, this->cmd(), output);
  }

  // repeated int32 arg = 49;
  for (int i = 0; i < this->arg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      49, this->arg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoPicMisc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cmd = 48;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(48, this->cmd(), target);
  }

  // repeated int32 arg = 49;
  for (int i = 0; i < this->arg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(49, this->arg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoPicMisc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cmd = 48;
    if (has_cmd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }

  }
  // repeated int32 arg = 49;
  {
    int data_size = 0;
    for (int i = 0; i < this->arg_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->arg(i));
    }
    total_size += 2 * this->arg_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoPicMisc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoPicMisc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoPicMisc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoPicMisc::MergeFrom(const TrainControlRequest_DoPicMisc& from) {
  GOOGLE_CHECK_NE(&from, this);
  arg_.MergeFrom(from.arg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoPicMisc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoPicMisc::CopyFrom(const TrainControlRequest_DoPicMisc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoPicMisc::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlRequest_DoPicMisc::Swap(TrainControlRequest_DoPicMisc* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    arg_.Swap(&other->arg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoPicMisc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoPicMisc_descriptor_;
  metadata.reflection = TrainControlRequest_DoPicMisc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoReflashPic::kDataFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoReflashPic::TrainControlRequest_DoReflashPic()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoReflashPic::InitAsDefaultInstance() {
}

TrainControlRequest_DoReflashPic::TrainControlRequest_DoReflashPic(const TrainControlRequest_DoReflashPic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoReflashPic::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoReflashPic::~TrainControlRequest_DoReflashPic() {
  SharedDtor();
}

void TrainControlRequest_DoReflashPic::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoReflashPic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoReflashPic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoReflashPic_descriptor_;
}

const TrainControlRequest_DoReflashPic& TrainControlRequest_DoReflashPic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoReflashPic* TrainControlRequest_DoReflashPic::default_instance_ = NULL;

TrainControlRequest_DoReflashPic* TrainControlRequest_DoReflashPic::New() const {
  return new TrainControlRequest_DoReflashPic;
}

void TrainControlRequest_DoReflashPic::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoReflashPic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 408, input, this->mutable_data())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoReflashPic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 data = 51;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      51, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoReflashPic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 data = 51;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(51, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoReflashPic::ByteSize() const {
  int total_size = 0;

  // repeated int32 data = 51;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    total_size += 2 * this->data_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoReflashPic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoReflashPic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoReflashPic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoReflashPic::MergeFrom(const TrainControlRequest_DoReflashPic& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoReflashPic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoReflashPic::CopyFrom(const TrainControlRequest_DoReflashPic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoReflashPic::IsInitialized() const {

  return true;
}

void TrainControlRequest_DoReflashPic::Swap(TrainControlRequest_DoReflashPic* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoReflashPic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoReflashPic_descriptor_;
  metadata.reflection = TrainControlRequest_DoReflashPic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoGetOrSetCV::kTrainIdFieldNumber;
const int TrainControlRequest_DoGetOrSetCV::kCvFieldNumber;
const int TrainControlRequest_DoGetOrSetCV::kValueFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoGetOrSetCV::TrainControlRequest_DoGetOrSetCV()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoGetOrSetCV::InitAsDefaultInstance() {
}

TrainControlRequest_DoGetOrSetCV::TrainControlRequest_DoGetOrSetCV(const TrainControlRequest_DoGetOrSetCV& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoGetOrSetCV::SharedCtor() {
  _cached_size_ = 0;
  train_id_ = 63;
  cv_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoGetOrSetCV::~TrainControlRequest_DoGetOrSetCV() {
  SharedDtor();
}

void TrainControlRequest_DoGetOrSetCV::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoGetOrSetCV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoGetOrSetCV::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoGetOrSetCV_descriptor_;
}

const TrainControlRequest_DoGetOrSetCV& TrainControlRequest_DoGetOrSetCV::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoGetOrSetCV* TrainControlRequest_DoGetOrSetCV::default_instance_ = NULL;

TrainControlRequest_DoGetOrSetCV* TrainControlRequest_DoGetOrSetCV::New() const {
  return new TrainControlRequest_DoGetOrSetCV;
}

void TrainControlRequest_DoGetOrSetCV::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    train_id_ = 63;
    cv_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoGetOrSetCV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 train_id = 53 [default = 63];
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_id_)));
          set_has_train_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(432)) goto parse_cv;
        break;
      }

      // required int32 cv = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cv_)));
          set_has_cv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(440)) goto parse_value;
        break;
      }

      // optional int32 value = 55;
      case 55: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoGetOrSetCV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 train_id = 53 [default = 63];
  if (has_train_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(53, this->train_id(), output);
  }

  // required int32 cv = 54;
  if (has_cv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(54, this->cv(), output);
  }

  // optional int32 value = 55;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(55, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoGetOrSetCV::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 train_id = 53 [default = 63];
  if (has_train_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(53, this->train_id(), target);
  }

  // required int32 cv = 54;
  if (has_cv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(54, this->cv(), target);
  }

  // optional int32 value = 55;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(55, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoGetOrSetCV::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 train_id = 53 [default = 63];
    if (has_train_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_id());
    }

    // required int32 cv = 54;
    if (has_cv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cv());
    }

    // optional int32 value = 55;
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoGetOrSetCV::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoGetOrSetCV* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoGetOrSetCV*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoGetOrSetCV::MergeFrom(const TrainControlRequest_DoGetOrSetCV& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_train_id()) {
      set_train_id(from.train_id());
    }
    if (from.has_cv()) {
      set_cv(from.cv());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoGetOrSetCV::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoGetOrSetCV::CopyFrom(const TrainControlRequest_DoGetOrSetCV& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoGetOrSetCV::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void TrainControlRequest_DoGetOrSetCV::Swap(TrainControlRequest_DoGetOrSetCV* other) {
  if (other != this) {
    std::swap(train_id_, other->train_id_);
    std::swap(cv_, other->cv_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoGetOrSetCV::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoGetOrSetCV_descriptor_;
  metadata.reflection = TrainControlRequest_DoGetOrSetCV_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest_DoWaitForChange::kTimestampFieldNumber;
const int TrainControlRequest_DoWaitForChange::kIdFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest_DoWaitForChange::TrainControlRequest_DoWaitForChange()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest_DoWaitForChange::InitAsDefaultInstance() {
}

TrainControlRequest_DoWaitForChange::TrainControlRequest_DoWaitForChange(const TrainControlRequest_DoWaitForChange& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest_DoWaitForChange::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest_DoWaitForChange::~TrainControlRequest_DoWaitForChange() {
  SharedDtor();
}

void TrainControlRequest_DoWaitForChange::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlRequest_DoWaitForChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest_DoWaitForChange::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_DoWaitForChange_descriptor_;
}

const TrainControlRequest_DoWaitForChange& TrainControlRequest_DoWaitForChange::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest_DoWaitForChange* TrainControlRequest_DoWaitForChange::default_instance_ = NULL;

TrainControlRequest_DoWaitForChange* TrainControlRequest_DoWaitForChange::New() const {
  return new TrainControlRequest_DoWaitForChange;
}

void TrainControlRequest_DoWaitForChange::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    timestamp_ = GOOGLE_ULONGLONG(0);
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest_DoWaitForChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 timestamp = 57;
      case 57: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(464)) goto parse_id;
        break;
      }

      // optional int32 id = 58;
      case 58: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest_DoWaitForChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 timestamp = 57;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(57, this->timestamp(), output);
  }

  // optional int32 id = 58;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(58, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest_DoWaitForChange::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 timestamp = 57;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(57, this->timestamp(), target);
  }

  // optional int32 id = 58;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(58, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest_DoWaitForChange::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 timestamp = 57;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional int32 id = 58;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest_DoWaitForChange::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest_DoWaitForChange* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest_DoWaitForChange*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest_DoWaitForChange::MergeFrom(const TrainControlRequest_DoWaitForChange& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest_DoWaitForChange::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest_DoWaitForChange::CopyFrom(const TrainControlRequest_DoWaitForChange& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest_DoWaitForChange::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlRequest_DoWaitForChange::Swap(TrainControlRequest_DoWaitForChange* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest_DoWaitForChange::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_DoWaitForChange_descriptor_;
  metadata.reflection = TrainControlRequest_DoWaitForChange_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlRequest::kDosetspeedFieldNumber;
const int TrainControlRequest::kDosetaccessoryFieldNumber;
const int TrainControlRequest::kDosetemergencystopFieldNumber;
const int TrainControlRequest::kDorpcFieldNumber;
const int TrainControlRequest::kDopingFieldNumber;
const int TrainControlRequest::kDogetorsetaddressFieldNumber;
const int TrainControlRequest::kDodropstateFieldNumber;
const int TrainControlRequest::kDochangesavedstateFieldNumber;
const int TrainControlRequest::kDosendrawcanpacketFieldNumber;
const int TrainControlRequest::kDoreflashautomataFieldNumber;
const int TrainControlRequest::kDogetlokdbFieldNumber;
const int TrainControlRequest::kDogetlokstateFieldNumber;
const int TrainControlRequest::kDoSetLokStateFieldNumber;
const int TrainControlRequest::kDoestoplocoFieldNumber;
const int TrainControlRequest::kDopicmiscFieldNumber;
const int TrainControlRequest::kDoreflashpicFieldNumber;
const int TrainControlRequest::kDogetorsetcvFieldNumber;
const int TrainControlRequest::kDowaitforchangeFieldNumber;
#endif  // !_MSC_VER

TrainControlRequest::TrainControlRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlRequest::InitAsDefaultInstance() {
  dosetspeed_ = const_cast< ::server::TrainControlRequest_DoSetSpeed*>(&::server::TrainControlRequest_DoSetSpeed::default_instance());
  dosetaccessory_ = const_cast< ::server::TrainControlRequest_DoSetAccessory*>(&::server::TrainControlRequest_DoSetAccessory::default_instance());
  dosetemergencystop_ = const_cast< ::server::TrainControlRequest_DoSetEmergencyStop*>(&::server::TrainControlRequest_DoSetEmergencyStop::default_instance());
  dorpc_ = const_cast< ::server::TrainControlRequest_DoRpc*>(&::server::TrainControlRequest_DoRpc::default_instance());
  doping_ = const_cast< ::server::TrainControlRequest_DoPing*>(&::server::TrainControlRequest_DoPing::default_instance());
  dogetorsetaddress_ = const_cast< ::server::TrainControlRequest_DoGetOrSetAddress*>(&::server::TrainControlRequest_DoGetOrSetAddress::default_instance());
  dodropstate_ = const_cast< ::server::TrainControlRequest_DoDropState*>(&::server::TrainControlRequest_DoDropState::default_instance());
  dochangesavedstate_ = const_cast< ::server::TrainControlRequest_DoChangeSavedState*>(&::server::TrainControlRequest_DoChangeSavedState::default_instance());
  dosendrawcanpacket_ = const_cast< ::server::TrainControlRequest_DoSendRawCanPacket*>(&::server::TrainControlRequest_DoSendRawCanPacket::default_instance());
  doreflashautomata_ = const_cast< ::server::TrainControlRequest_DoReflashAutomata*>(&::server::TrainControlRequest_DoReflashAutomata::default_instance());
  dogetlokdb_ = const_cast< ::server::TrainControlRequest_DoGetLokDb*>(&::server::TrainControlRequest_DoGetLokDb::default_instance());
  dogetlokstate_ = const_cast< ::server::TrainControlRequest_DoGetLokState*>(&::server::TrainControlRequest_DoGetLokState::default_instance());
  dosetlokstate_ = const_cast< ::server::LokStateProto*>(&::server::LokStateProto::default_instance());
  doestoploco_ = const_cast< ::server::TrainControlRequest_DoEStopLoco*>(&::server::TrainControlRequest_DoEStopLoco::default_instance());
  dopicmisc_ = const_cast< ::server::TrainControlRequest_DoPicMisc*>(&::server::TrainControlRequest_DoPicMisc::default_instance());
  doreflashpic_ = const_cast< ::server::TrainControlRequest_DoReflashPic*>(&::server::TrainControlRequest_DoReflashPic::default_instance());
  dogetorsetcv_ = const_cast< ::server::TrainControlRequest_DoGetOrSetCV*>(&::server::TrainControlRequest_DoGetOrSetCV::default_instance());
  dowaitforchange_ = const_cast< ::server::TrainControlRequest_DoWaitForChange*>(&::server::TrainControlRequest_DoWaitForChange::default_instance());
}

TrainControlRequest::TrainControlRequest(const TrainControlRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlRequest::SharedCtor() {
  _cached_size_ = 0;
  dosetspeed_ = NULL;
  dosetaccessory_ = NULL;
  dosetemergencystop_ = NULL;
  dorpc_ = NULL;
  doping_ = NULL;
  dogetorsetaddress_ = NULL;
  dodropstate_ = NULL;
  dochangesavedstate_ = NULL;
  dosendrawcanpacket_ = NULL;
  doreflashautomata_ = NULL;
  dogetlokdb_ = NULL;
  dogetlokstate_ = NULL;
  dosetlokstate_ = NULL;
  doestoploco_ = NULL;
  dopicmisc_ = NULL;
  doreflashpic_ = NULL;
  dogetorsetcv_ = NULL;
  dowaitforchange_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlRequest::~TrainControlRequest() {
  SharedDtor();
}

void TrainControlRequest::SharedDtor() {
  if (this != default_instance_) {
    delete dosetspeed_;
    delete dosetaccessory_;
    delete dosetemergencystop_;
    delete dorpc_;
    delete doping_;
    delete dogetorsetaddress_;
    delete dodropstate_;
    delete dochangesavedstate_;
    delete dosendrawcanpacket_;
    delete doreflashautomata_;
    delete dogetlokdb_;
    delete dogetlokstate_;
    delete dosetlokstate_;
    delete doestoploco_;
    delete dopicmisc_;
    delete doreflashpic_;
    delete dogetorsetcv_;
    delete dowaitforchange_;
  }
}

void TrainControlRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlRequest_descriptor_;
}

const TrainControlRequest& TrainControlRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlRequest* TrainControlRequest::default_instance_ = NULL;

TrainControlRequest* TrainControlRequest::New() const {
  return new TrainControlRequest;
}

void TrainControlRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_dosetspeed()) {
      if (dosetspeed_ != NULL) dosetspeed_->::server::TrainControlRequest_DoSetSpeed::Clear();
    }
    if (has_dosetaccessory()) {
      if (dosetaccessory_ != NULL) dosetaccessory_->::server::TrainControlRequest_DoSetAccessory::Clear();
    }
    if (has_dosetemergencystop()) {
      if (dosetemergencystop_ != NULL) dosetemergencystop_->::server::TrainControlRequest_DoSetEmergencyStop::Clear();
    }
    if (has_dorpc()) {
      if (dorpc_ != NULL) dorpc_->::server::TrainControlRequest_DoRpc::Clear();
    }
    if (has_doping()) {
      if (doping_ != NULL) doping_->::server::TrainControlRequest_DoPing::Clear();
    }
    if (has_dogetorsetaddress()) {
      if (dogetorsetaddress_ != NULL) dogetorsetaddress_->::server::TrainControlRequest_DoGetOrSetAddress::Clear();
    }
    if (has_dodropstate()) {
      if (dodropstate_ != NULL) dodropstate_->::server::TrainControlRequest_DoDropState::Clear();
    }
    if (has_dochangesavedstate()) {
      if (dochangesavedstate_ != NULL) dochangesavedstate_->::server::TrainControlRequest_DoChangeSavedState::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_dosendrawcanpacket()) {
      if (dosendrawcanpacket_ != NULL) dosendrawcanpacket_->::server::TrainControlRequest_DoSendRawCanPacket::Clear();
    }
    if (has_doreflashautomata()) {
      if (doreflashautomata_ != NULL) doreflashautomata_->::server::TrainControlRequest_DoReflashAutomata::Clear();
    }
    if (has_dogetlokdb()) {
      if (dogetlokdb_ != NULL) dogetlokdb_->::server::TrainControlRequest_DoGetLokDb::Clear();
    }
    if (has_dogetlokstate()) {
      if (dogetlokstate_ != NULL) dogetlokstate_->::server::TrainControlRequest_DoGetLokState::Clear();
    }
    if (has_dosetlokstate()) {
      if (dosetlokstate_ != NULL) dosetlokstate_->::server::LokStateProto::Clear();
    }
    if (has_doestoploco()) {
      if (doestoploco_ != NULL) doestoploco_->::server::TrainControlRequest_DoEStopLoco::Clear();
    }
    if (has_dopicmisc()) {
      if (dopicmisc_ != NULL) dopicmisc_->::server::TrainControlRequest_DoPicMisc::Clear();
    }
    if (has_doreflashpic()) {
      if (doreflashpic_ != NULL) doreflashpic_->::server::TrainControlRequest_DoReflashPic::Clear();
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_dogetorsetcv()) {
      if (dogetorsetcv_ != NULL) dogetorsetcv_->::server::TrainControlRequest_DoGetOrSetCV::Clear();
    }
    if (has_dowaitforchange()) {
      if (dowaitforchange_ != NULL) dowaitforchange_->::server::TrainControlRequest_DoWaitForChange::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional group DoSetSpeed = 1 {
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                1, input, mutable_dosetspeed()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(35)) goto parse_dosetaccessory;
        break;
      }

      // optional group DoSetAccessory = 4 {
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dosetaccessory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_dosetaccessory()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(67)) goto parse_dosetemergencystop;
        break;
      }

      // optional group DoSetEmergencyStop = 8 {
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dosetemergencystop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                8, input, mutable_dosetemergencystop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(131)) goto parse_dorpc;
        break;
      }

      // optional group DoRpc = 16 {
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dorpc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                16, input, mutable_dorpc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(171)) goto parse_doping;
        break;
      }

      // optional group DoPing = 21 {
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_doping:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                21, input, mutable_doping()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(187)) goto parse_dogetorsetaddress;
        break;
      }

      // optional group DoGetOrSetAddress = 23 {
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dogetorsetaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                23, input, mutable_dogetorsetaddress()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(203)) goto parse_dodropstate;
        break;
      }

      // optional group DoDropState = 25 {
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dodropstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                25, input, mutable_dodropstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(211)) goto parse_dochangesavedstate;
        break;
      }

      // optional group DoChangeSavedState = 26 {
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dochangesavedstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                26, input, mutable_dochangesavedstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(259)) goto parse_dosendrawcanpacket;
        break;
      }

      // optional group DoSendRawCanPacket = 32 {
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dosendrawcanpacket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                32, input, mutable_dosendrawcanpacket()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(323)) goto parse_doreflashautomata;
        break;
      }

      // optional group DoReflashAutomata = 40 {
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_doreflashautomata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                40, input, mutable_doreflashautomata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(331)) goto parse_dogetlokdb;
        break;
      }

      // optional group DoGetLokDb = 41 {
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dogetlokdb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                41, input, mutable_dogetlokdb()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(339)) goto parse_dogetlokstate;
        break;
      }

      // optional group DoGetLokState = 42 {
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dogetlokstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                42, input, mutable_dogetlokstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(354)) goto parse_DoSetLokState;
        break;
      }

      // optional .server.LokStateProto DoSetLokState = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_DoSetLokState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dosetlokstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(363)) goto parse_doestoploco;
        break;
      }

      // optional group DoEStopLoco = 45 {
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_doestoploco:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                45, input, mutable_doestoploco()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(379)) goto parse_dopicmisc;
        break;
      }

      // optional group DoPicMisc = 47 {
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dopicmisc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                47, input, mutable_dopicmisc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(403)) goto parse_doreflashpic;
        break;
      }

      // optional group DoReflashPic = 50 {
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_doreflashpic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                50, input, mutable_doreflashpic()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(419)) goto parse_dogetorsetcv;
        break;
      }

      // optional group DoGetOrSetCV = 52 {
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dogetorsetcv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                52, input, mutable_dogetorsetcv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(451)) goto parse_dowaitforchange;
        break;
      }

      // optional group DoWaitForChange = 56 {
      case 56: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_dowaitforchange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                56, input, mutable_dowaitforchange()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional group DoSetSpeed = 1 {
  if (has_dosetspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      1, this->dosetspeed(), output);
  }

  // optional group DoSetAccessory = 4 {
  if (has_dosetaccessory()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, this->dosetaccessory(), output);
  }

  // optional group DoSetEmergencyStop = 8 {
  if (has_dosetemergencystop()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      8, this->dosetemergencystop(), output);
  }

  // optional group DoRpc = 16 {
  if (has_dorpc()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      16, this->dorpc(), output);
  }

  // optional group DoPing = 21 {
  if (has_doping()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      21, this->doping(), output);
  }

  // optional group DoGetOrSetAddress = 23 {
  if (has_dogetorsetaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      23, this->dogetorsetaddress(), output);
  }

  // optional group DoDropState = 25 {
  if (has_dodropstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      25, this->dodropstate(), output);
  }

  // optional group DoChangeSavedState = 26 {
  if (has_dochangesavedstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      26, this->dochangesavedstate(), output);
  }

  // optional group DoSendRawCanPacket = 32 {
  if (has_dosendrawcanpacket()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      32, this->dosendrawcanpacket(), output);
  }

  // optional group DoReflashAutomata = 40 {
  if (has_doreflashautomata()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      40, this->doreflashautomata(), output);
  }

  // optional group DoGetLokDb = 41 {
  if (has_dogetlokdb()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      41, this->dogetlokdb(), output);
  }

  // optional group DoGetLokState = 42 {
  if (has_dogetlokstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      42, this->dogetlokstate(), output);
  }

  // optional .server.LokStateProto DoSetLokState = 44;
  if (has_dosetlokstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, this->dosetlokstate(), output);
  }

  // optional group DoEStopLoco = 45 {
  if (has_doestoploco()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      45, this->doestoploco(), output);
  }

  // optional group DoPicMisc = 47 {
  if (has_dopicmisc()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      47, this->dopicmisc(), output);
  }

  // optional group DoReflashPic = 50 {
  if (has_doreflashpic()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      50, this->doreflashpic(), output);
  }

  // optional group DoGetOrSetCV = 52 {
  if (has_dogetorsetcv()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      52, this->dogetorsetcv(), output);
  }

  // optional group DoWaitForChange = 56 {
  if (has_dowaitforchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      56, this->dowaitforchange(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional group DoSetSpeed = 1 {
  if (has_dosetspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        1, this->dosetspeed(), target);
  }

  // optional group DoSetAccessory = 4 {
  if (has_dosetaccessory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        4, this->dosetaccessory(), target);
  }

  // optional group DoSetEmergencyStop = 8 {
  if (has_dosetemergencystop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        8, this->dosetemergencystop(), target);
  }

  // optional group DoRpc = 16 {
  if (has_dorpc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        16, this->dorpc(), target);
  }

  // optional group DoPing = 21 {
  if (has_doping()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        21, this->doping(), target);
  }

  // optional group DoGetOrSetAddress = 23 {
  if (has_dogetorsetaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        23, this->dogetorsetaddress(), target);
  }

  // optional group DoDropState = 25 {
  if (has_dodropstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        25, this->dodropstate(), target);
  }

  // optional group DoChangeSavedState = 26 {
  if (has_dochangesavedstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        26, this->dochangesavedstate(), target);
  }

  // optional group DoSendRawCanPacket = 32 {
  if (has_dosendrawcanpacket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        32, this->dosendrawcanpacket(), target);
  }

  // optional group DoReflashAutomata = 40 {
  if (has_doreflashautomata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        40, this->doreflashautomata(), target);
  }

  // optional group DoGetLokDb = 41 {
  if (has_dogetlokdb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        41, this->dogetlokdb(), target);
  }

  // optional group DoGetLokState = 42 {
  if (has_dogetlokstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        42, this->dogetlokstate(), target);
  }

  // optional .server.LokStateProto DoSetLokState = 44;
  if (has_dosetlokstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        44, this->dosetlokstate(), target);
  }

  // optional group DoEStopLoco = 45 {
  if (has_doestoploco()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        45, this->doestoploco(), target);
  }

  // optional group DoPicMisc = 47 {
  if (has_dopicmisc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        47, this->dopicmisc(), target);
  }

  // optional group DoReflashPic = 50 {
  if (has_doreflashpic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        50, this->doreflashpic(), target);
  }

  // optional group DoGetOrSetCV = 52 {
  if (has_dogetorsetcv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        52, this->dogetorsetcv(), target);
  }

  // optional group DoWaitForChange = 56 {
  if (has_dowaitforchange()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        56, this->dowaitforchange(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional group DoSetSpeed = 1 {
    if (has_dosetspeed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dosetspeed());
    }

    // optional group DoSetAccessory = 4 {
    if (has_dosetaccessory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dosetaccessory());
    }

    // optional group DoSetEmergencyStop = 8 {
    if (has_dosetemergencystop()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dosetemergencystop());
    }

    // optional group DoRpc = 16 {
    if (has_dorpc()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dorpc());
    }

    // optional group DoPing = 21 {
    if (has_doping()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->doping());
    }

    // optional group DoGetOrSetAddress = 23 {
    if (has_dogetorsetaddress()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dogetorsetaddress());
    }

    // optional group DoDropState = 25 {
    if (has_dodropstate()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dodropstate());
    }

    // optional group DoChangeSavedState = 26 {
    if (has_dochangesavedstate()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dochangesavedstate());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional group DoSendRawCanPacket = 32 {
    if (has_dosendrawcanpacket()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dosendrawcanpacket());
    }

    // optional group DoReflashAutomata = 40 {
    if (has_doreflashautomata()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->doreflashautomata());
    }

    // optional group DoGetLokDb = 41 {
    if (has_dogetlokdb()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dogetlokdb());
    }

    // optional group DoGetLokState = 42 {
    if (has_dogetlokstate()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dogetlokstate());
    }

    // optional .server.LokStateProto DoSetLokState = 44;
    if (has_dosetlokstate()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dosetlokstate());
    }

    // optional group DoEStopLoco = 45 {
    if (has_doestoploco()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->doestoploco());
    }

    // optional group DoPicMisc = 47 {
    if (has_dopicmisc()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dopicmisc());
    }

    // optional group DoReflashPic = 50 {
    if (has_doreflashpic()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->doreflashpic());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional group DoGetOrSetCV = 52 {
    if (has_dogetorsetcv()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dogetorsetcv());
    }

    // optional group DoWaitForChange = 56 {
    if (has_dowaitforchange()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->dowaitforchange());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlRequest::MergeFrom(const TrainControlRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_dosetspeed()) {
      mutable_dosetspeed()->::server::TrainControlRequest_DoSetSpeed::MergeFrom(from.dosetspeed());
    }
    if (from.has_dosetaccessory()) {
      mutable_dosetaccessory()->::server::TrainControlRequest_DoSetAccessory::MergeFrom(from.dosetaccessory());
    }
    if (from.has_dosetemergencystop()) {
      mutable_dosetemergencystop()->::server::TrainControlRequest_DoSetEmergencyStop::MergeFrom(from.dosetemergencystop());
    }
    if (from.has_dorpc()) {
      mutable_dorpc()->::server::TrainControlRequest_DoRpc::MergeFrom(from.dorpc());
    }
    if (from.has_doping()) {
      mutable_doping()->::server::TrainControlRequest_DoPing::MergeFrom(from.doping());
    }
    if (from.has_dogetorsetaddress()) {
      mutable_dogetorsetaddress()->::server::TrainControlRequest_DoGetOrSetAddress::MergeFrom(from.dogetorsetaddress());
    }
    if (from.has_dodropstate()) {
      mutable_dodropstate()->::server::TrainControlRequest_DoDropState::MergeFrom(from.dodropstate());
    }
    if (from.has_dochangesavedstate()) {
      mutable_dochangesavedstate()->::server::TrainControlRequest_DoChangeSavedState::MergeFrom(from.dochangesavedstate());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_dosendrawcanpacket()) {
      mutable_dosendrawcanpacket()->::server::TrainControlRequest_DoSendRawCanPacket::MergeFrom(from.dosendrawcanpacket());
    }
    if (from.has_doreflashautomata()) {
      mutable_doreflashautomata()->::server::TrainControlRequest_DoReflashAutomata::MergeFrom(from.doreflashautomata());
    }
    if (from.has_dogetlokdb()) {
      mutable_dogetlokdb()->::server::TrainControlRequest_DoGetLokDb::MergeFrom(from.dogetlokdb());
    }
    if (from.has_dogetlokstate()) {
      mutable_dogetlokstate()->::server::TrainControlRequest_DoGetLokState::MergeFrom(from.dogetlokstate());
    }
    if (from.has_dosetlokstate()) {
      mutable_dosetlokstate()->::server::LokStateProto::MergeFrom(from.dosetlokstate());
    }
    if (from.has_doestoploco()) {
      mutable_doestoploco()->::server::TrainControlRequest_DoEStopLoco::MergeFrom(from.doestoploco());
    }
    if (from.has_dopicmisc()) {
      mutable_dopicmisc()->::server::TrainControlRequest_DoPicMisc::MergeFrom(from.dopicmisc());
    }
    if (from.has_doreflashpic()) {
      mutable_doreflashpic()->::server::TrainControlRequest_DoReflashPic::MergeFrom(from.doreflashpic());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_dogetorsetcv()) {
      mutable_dogetorsetcv()->::server::TrainControlRequest_DoGetOrSetCV::MergeFrom(from.dogetorsetcv());
    }
    if (from.has_dowaitforchange()) {
      mutable_dowaitforchange()->::server::TrainControlRequest_DoWaitForChange::MergeFrom(from.dowaitforchange());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlRequest::CopyFrom(const TrainControlRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlRequest::IsInitialized() const {

  if (has_dosetspeed()) {
    if (!this->dosetspeed().IsInitialized()) return false;
  }
  if (has_dosetaccessory()) {
    if (!this->dosetaccessory().IsInitialized()) return false;
  }
  if (has_dorpc()) {
    if (!this->dorpc().IsInitialized()) return false;
  }
  if (has_dochangesavedstate()) {
    if (!this->dochangesavedstate().IsInitialized()) return false;
  }
  if (has_doreflashautomata()) {
    if (!this->doreflashautomata().IsInitialized()) return false;
  }
  if (has_dosetlokstate()) {
    if (!this->dosetlokstate().IsInitialized()) return false;
  }
  if (has_doestoploco()) {
    if (!this->doestoploco().IsInitialized()) return false;
  }
  if (has_dopicmisc()) {
    if (!this->dopicmisc().IsInitialized()) return false;
  }
  if (has_dogetorsetcv()) {
    if (!this->dogetorsetcv().IsInitialized()) return false;
  }
  if (has_dowaitforchange()) {
    if (!this->dowaitforchange().IsInitialized()) return false;
  }
  return true;
}

void TrainControlRequest::Swap(TrainControlRequest* other) {
  if (other != this) {
    std::swap(dosetspeed_, other->dosetspeed_);
    std::swap(dosetaccessory_, other->dosetaccessory_);
    std::swap(dosetemergencystop_, other->dosetemergencystop_);
    std::swap(dorpc_, other->dorpc_);
    std::swap(doping_, other->doping_);
    std::swap(dogetorsetaddress_, other->dogetorsetaddress_);
    std::swap(dodropstate_, other->dodropstate_);
    std::swap(dochangesavedstate_, other->dochangesavedstate_);
    std::swap(dosendrawcanpacket_, other->dosendrawcanpacket_);
    std::swap(doreflashautomata_, other->doreflashautomata_);
    std::swap(dogetlokdb_, other->dogetlokdb_);
    std::swap(dogetlokstate_, other->dogetlokstate_);
    std::swap(dosetlokstate_, other->dosetlokstate_);
    std::swap(doestoploco_, other->doestoploco_);
    std::swap(dopicmisc_, other->dopicmisc_);
    std::swap(doreflashpic_, other->doreflashpic_);
    std::swap(dogetorsetcv_, other->dogetorsetcv_);
    std::swap(dowaitforchange_, other->dowaitforchange_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlRequest_descriptor_;
  metadata.reflection = TrainControlRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TrainControlResponse_Speed::kIdFieldNumber;
const int TrainControlResponse_Speed::kDirFieldNumber;
const int TrainControlResponse_Speed::kSpeedFieldNumber;
const int TrainControlResponse_Speed::kTimestampFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_Speed::TrainControlResponse_Speed()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_Speed::InitAsDefaultInstance() {
}

TrainControlResponse_Speed::TrainControlResponse_Speed(const TrainControlResponse_Speed& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_Speed::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  dir_ = 1;
  speed_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_Speed::~TrainControlResponse_Speed() {
  SharedDtor();
}

void TrainControlResponse_Speed::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_Speed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_Speed::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_Speed_descriptor_;
}

const TrainControlResponse_Speed& TrainControlResponse_Speed::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_Speed* TrainControlResponse_Speed::default_instance_ = NULL;

TrainControlResponse_Speed* TrainControlResponse_Speed::New() const {
  return new TrainControlResponse_Speed;
}

void TrainControlResponse_Speed::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    dir_ = 1;
    speed_ = 0;
    timestamp_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_Speed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_speed;
        break;
      }

      // required int32 speed = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_speed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &speed_)));
          set_has_speed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_dir;
        break;
      }

      // optional int32 dir = 25 [default = 1];
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dir_)));
          set_has_dir();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(400)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 50;
      case 50: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_Speed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // required int32 speed = 3;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->speed(), output);
  }

  // optional int32 dir = 25 [default = 1];
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->dir(), output);
  }

  // optional uint64 timestamp = 50;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(50, this->timestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_Speed::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // required int32 speed = 3;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->speed(), target);
  }

  // optional int32 dir = 25 [default = 1];
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->dir(), target);
  }

  // optional uint64 timestamp = 50;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(50, this->timestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_Speed::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 dir = 25 [default = 1];
    if (has_dir()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dir());
    }

    // required int32 speed = 3;
    if (has_speed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->speed());
    }

    // optional uint64 timestamp = 50;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_Speed::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_Speed* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_Speed*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_Speed::MergeFrom(const TrainControlResponse_Speed& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_dir()) {
      set_dir(from.dir());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_Speed::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_Speed::CopyFrom(const TrainControlResponse_Speed& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_Speed::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;

  return true;
}

void TrainControlResponse_Speed::Swap(TrainControlResponse_Speed* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(dir_, other->dir_);
    std::swap(speed_, other->speed_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_Speed::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_Speed_descriptor_;
  metadata.reflection = TrainControlResponse_Speed_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_Accessory::kTrainIdFieldNumber;
const int TrainControlResponse_Accessory::kAccessoryIdFieldNumber;
const int TrainControlResponse_Accessory::kValueFieldNumber;
const int TrainControlResponse_Accessory::kTimestampFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_Accessory::TrainControlResponse_Accessory()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_Accessory::InitAsDefaultInstance() {
}

TrainControlResponse_Accessory::TrainControlResponse_Accessory(const TrainControlResponse_Accessory& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_Accessory::SharedCtor() {
  _cached_size_ = 0;
  train_id_ = 0;
  accessory_id_ = 0;
  value_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_Accessory::~TrainControlResponse_Accessory() {
  SharedDtor();
}

void TrainControlResponse_Accessory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_Accessory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_Accessory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_Accessory_descriptor_;
}

const TrainControlResponse_Accessory& TrainControlResponse_Accessory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_Accessory* TrainControlResponse_Accessory::default_instance_ = NULL;

TrainControlResponse_Accessory* TrainControlResponse_Accessory::New() const {
  return new TrainControlResponse_Accessory;
}

void TrainControlResponse_Accessory::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    train_id_ = 0;
    accessory_id_ = 0;
    value_ = 0;
    timestamp_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_Accessory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 train_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_id_)));
          set_has_train_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_accessory_id;
        break;
      }

      // required int32 accessory_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_accessory_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &accessory_id_)));
          set_has_accessory_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_value;
        break;
      }

      // required int32 value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(408)) goto parse_timestamp;
        break;
      }

      // optional uint64 timestamp = 51;
      case 51: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_Accessory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 train_id = 5;
  if (has_train_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->train_id(), output);
  }

  // required int32 accessory_id = 6;
  if (has_accessory_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->accessory_id(), output);
  }

  // required int32 value = 7;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->value(), output);
  }

  // optional uint64 timestamp = 51;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(51, this->timestamp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_Accessory::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 train_id = 5;
  if (has_train_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->train_id(), target);
  }

  // required int32 accessory_id = 6;
  if (has_accessory_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->accessory_id(), target);
  }

  // required int32 value = 7;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->value(), target);
  }

  // optional uint64 timestamp = 51;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(51, this->timestamp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_Accessory::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 train_id = 5;
    if (has_train_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_id());
    }

    // required int32 accessory_id = 6;
    if (has_accessory_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->accessory_id());
    }

    // required int32 value = 7;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

    // optional uint64 timestamp = 51;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_Accessory::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_Accessory* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_Accessory*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_Accessory::MergeFrom(const TrainControlResponse_Accessory& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_train_id()) {
      set_train_id(from.train_id());
    }
    if (from.has_accessory_id()) {
      set_accessory_id(from.accessory_id());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_Accessory::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_Accessory::CopyFrom(const TrainControlResponse_Accessory& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_Accessory::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void TrainControlResponse_Accessory::Swap(TrainControlResponse_Accessory* other) {
  if (other != this) {
    std::swap(train_id_, other->train_id_);
    std::swap(accessory_id_, other->accessory_id_);
    std::swap(value_, other->value_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_Accessory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_Accessory_descriptor_;
  metadata.reflection = TrainControlResponse_Accessory_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_EmergencyStop::kStopFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_EmergencyStop::TrainControlResponse_EmergencyStop()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_EmergencyStop::InitAsDefaultInstance() {
}

TrainControlResponse_EmergencyStop::TrainControlResponse_EmergencyStop(const TrainControlResponse_EmergencyStop& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_EmergencyStop::SharedCtor() {
  _cached_size_ = 0;
  stop_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_EmergencyStop::~TrainControlResponse_EmergencyStop() {
  SharedDtor();
}

void TrainControlResponse_EmergencyStop::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_EmergencyStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_EmergencyStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_EmergencyStop_descriptor_;
}

const TrainControlResponse_EmergencyStop& TrainControlResponse_EmergencyStop::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_EmergencyStop* TrainControlResponse_EmergencyStop::default_instance_ = NULL;

TrainControlResponse_EmergencyStop* TrainControlResponse_EmergencyStop::New() const {
  return new TrainControlResponse_EmergencyStop;
}

void TrainControlResponse_EmergencyStop::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    stop_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_EmergencyStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool stop = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
          set_has_stop();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_EmergencyStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool stop = 9;
  if (has_stop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->stop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_EmergencyStop::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool stop = 9;
  if (has_stop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->stop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_EmergencyStop::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool stop = 9;
    if (has_stop()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_EmergencyStop::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_EmergencyStop* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_EmergencyStop*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_EmergencyStop::MergeFrom(const TrainControlResponse_EmergencyStop& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stop()) {
      set_stop(from.stop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_EmergencyStop::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_EmergencyStop::CopyFrom(const TrainControlResponse_EmergencyStop& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_EmergencyStop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlResponse_EmergencyStop::Swap(TrainControlResponse_EmergencyStop* other) {
  if (other != this) {
    std::swap(stop_, other->stop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_EmergencyStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_EmergencyStop_descriptor_;
  metadata.reflection = TrainControlResponse_EmergencyStop_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_RpcResponse::kSuccessFieldNumber;
const int TrainControlResponse_RpcResponse::kResponseFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_RpcResponse::TrainControlResponse_RpcResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_RpcResponse::InitAsDefaultInstance() {
}

TrainControlResponse_RpcResponse::TrainControlResponse_RpcResponse(const TrainControlResponse_RpcResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_RpcResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
  response_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_RpcResponse::~TrainControlResponse_RpcResponse() {
  SharedDtor();
}

void TrainControlResponse_RpcResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_RpcResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_RpcResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_RpcResponse_descriptor_;
}

const TrainControlResponse_RpcResponse& TrainControlResponse_RpcResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_RpcResponse* TrainControlResponse_RpcResponse::default_instance_ = NULL;

TrainControlResponse_RpcResponse* TrainControlResponse_RpcResponse::New() const {
  return new TrainControlResponse_RpcResponse;
}

void TrainControlResponse_RpcResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    success_ = false;
    response_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_RpcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool success = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
          set_has_success();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_response;
        break;
      }

      // required int32 response = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_response:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_)));
          set_has_response();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_RpcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bool success = 17;
  if (has_success()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->success(), output);
  }

  // required int32 response = 18;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_RpcResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bool success = 17;
  if (has_success()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->success(), target);
  }

  // required int32 response = 18;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_RpcResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bool success = 17;
    if (has_success()) {
      total_size += 2 + 1;
    }

    // required int32 response = 18;
    if (has_response()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->response());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_RpcResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_RpcResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_RpcResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_RpcResponse::MergeFrom(const TrainControlResponse_RpcResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_success()) {
      set_success(from.success());
    }
    if (from.has_response()) {
      set_response(from.response());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_RpcResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_RpcResponse::CopyFrom(const TrainControlResponse_RpcResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_RpcResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TrainControlResponse_RpcResponse::Swap(TrainControlResponse_RpcResponse* other) {
  if (other != this) {
    std::swap(success_, other->success_);
    std::swap(response_, other->response_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_RpcResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_RpcResponse_descriptor_;
  metadata.reflection = TrainControlResponse_RpcResponse_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_Pong::kValueFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_Pong::TrainControlResponse_Pong()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_Pong::InitAsDefaultInstance() {
}

TrainControlResponse_Pong::TrainControlResponse_Pong(const TrainControlResponse_Pong& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_Pong::SharedCtor() {
  _cached_size_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_Pong::~TrainControlResponse_Pong() {
  SharedDtor();
}

void TrainControlResponse_Pong::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_Pong::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_Pong::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_Pong_descriptor_;
}

const TrainControlResponse_Pong& TrainControlResponse_Pong::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_Pong* TrainControlResponse_Pong::default_instance_ = NULL;

TrainControlResponse_Pong* TrainControlResponse_Pong::New() const {
  return new TrainControlResponse_Pong;
}

void TrainControlResponse_Pong::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_Pong::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 value = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_Pong::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 value = 20;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_Pong::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 value = 20;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_Pong::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 value = 20;
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_Pong::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_Pong* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_Pong*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_Pong::MergeFrom(const TrainControlResponse_Pong& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_Pong::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_Pong::CopyFrom(const TrainControlResponse_Pong& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_Pong::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlResponse_Pong::Swap(TrainControlResponse_Pong* other) {
  if (other != this) {
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_Pong::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_Pong_descriptor_;
  metadata.reflection = TrainControlResponse_Pong_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_CurrentAddress::kAddressFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_CurrentAddress::TrainControlResponse_CurrentAddress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_CurrentAddress::InitAsDefaultInstance() {
}

TrainControlResponse_CurrentAddress::TrainControlResponse_CurrentAddress(const TrainControlResponse_CurrentAddress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_CurrentAddress::SharedCtor() {
  _cached_size_ = 0;
  address_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_CurrentAddress::~TrainControlResponse_CurrentAddress() {
  SharedDtor();
}

void TrainControlResponse_CurrentAddress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_CurrentAddress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_CurrentAddress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_CurrentAddress_descriptor_;
}

const TrainControlResponse_CurrentAddress& TrainControlResponse_CurrentAddress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_CurrentAddress* TrainControlResponse_CurrentAddress::default_instance_ = NULL;

TrainControlResponse_CurrentAddress* TrainControlResponse_CurrentAddress::New() const {
  return new TrainControlResponse_CurrentAddress;
}

void TrainControlResponse_CurrentAddress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    address_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_CurrentAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 address = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_CurrentAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 address = 22;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->address(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_CurrentAddress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 address = 22;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->address(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_CurrentAddress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 address = 22;
    if (has_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->address());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_CurrentAddress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_CurrentAddress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_CurrentAddress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_CurrentAddress::MergeFrom(const TrainControlResponse_CurrentAddress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_CurrentAddress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_CurrentAddress::CopyFrom(const TrainControlResponse_CurrentAddress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_CurrentAddress::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlResponse_CurrentAddress::Swap(TrainControlResponse_CurrentAddress* other) {
  if (other != this) {
    std::swap(address_, other->address_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_CurrentAddress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_CurrentAddress_descriptor_;
  metadata.reflection = TrainControlResponse_CurrentAddress_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_RawCanPacket::kDataFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_RawCanPacket::TrainControlResponse_RawCanPacket()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_RawCanPacket::InitAsDefaultInstance() {
}

TrainControlResponse_RawCanPacket::TrainControlResponse_RawCanPacket(const TrainControlResponse_RawCanPacket& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_RawCanPacket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_RawCanPacket::~TrainControlResponse_RawCanPacket() {
  SharedDtor();
}

void TrainControlResponse_RawCanPacket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_RawCanPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_RawCanPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_RawCanPacket_descriptor_;
}

const TrainControlResponse_RawCanPacket& TrainControlResponse_RawCanPacket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_RawCanPacket* TrainControlResponse_RawCanPacket::default_instance_ = NULL;

TrainControlResponse_RawCanPacket* TrainControlResponse_RawCanPacket::New() const {
  return new TrainControlResponse_RawCanPacket;
}

void TrainControlResponse_RawCanPacket::Clear() {
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_RawCanPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 data = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 192, input, this->mutable_data())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_data())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_RawCanPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 data = 24;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      24, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_RawCanPacket::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 data = 24;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(24, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_RawCanPacket::ByteSize() const {
  int total_size = 0;

  // repeated int32 data = 24;
  {
    int data_size = 0;
    for (int i = 0; i < this->data_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->data(i));
    }
    total_size += 2 * this->data_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_RawCanPacket::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_RawCanPacket* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_RawCanPacket*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_RawCanPacket::MergeFrom(const TrainControlResponse_RawCanPacket& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_RawCanPacket::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_RawCanPacket::CopyFrom(const TrainControlResponse_RawCanPacket& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_RawCanPacket::IsInitialized() const {

  return true;
}

void TrainControlResponse_RawCanPacket::Swap(TrainControlResponse_RawCanPacket* other) {
  if (other != this) {
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_RawCanPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_RawCanPacket_descriptor_;
  metadata.reflection = TrainControlResponse_RawCanPacket_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_ReflashAutomata::kErrorFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_ReflashAutomata::TrainControlResponse_ReflashAutomata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_ReflashAutomata::InitAsDefaultInstance() {
}

TrainControlResponse_ReflashAutomata::TrainControlResponse_ReflashAutomata(const TrainControlResponse_ReflashAutomata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_ReflashAutomata::SharedCtor() {
  _cached_size_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_ReflashAutomata::~TrainControlResponse_ReflashAutomata() {
  SharedDtor();
}

void TrainControlResponse_ReflashAutomata::SharedDtor() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void TrainControlResponse_ReflashAutomata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_ReflashAutomata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_ReflashAutomata_descriptor_;
}

const TrainControlResponse_ReflashAutomata& TrainControlResponse_ReflashAutomata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_ReflashAutomata* TrainControlResponse_ReflashAutomata::default_instance_ = NULL;

TrainControlResponse_ReflashAutomata* TrainControlResponse_ReflashAutomata::New() const {
  return new TrainControlResponse_ReflashAutomata;
}

void TrainControlResponse_ReflashAutomata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::kEmptyString) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_ReflashAutomata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string error = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_ReflashAutomata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string error = 26;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_ReflashAutomata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string error = 26;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_ReflashAutomata::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string error = 26;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_ReflashAutomata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_ReflashAutomata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_ReflashAutomata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_ReflashAutomata::MergeFrom(const TrainControlResponse_ReflashAutomata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_ReflashAutomata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_ReflashAutomata::CopyFrom(const TrainControlResponse_ReflashAutomata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_ReflashAutomata::IsInitialized() const {

  return true;
}

void TrainControlResponse_ReflashAutomata::Swap(TrainControlResponse_ReflashAutomata* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_ReflashAutomata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_ReflashAutomata_descriptor_;
  metadata.reflection = TrainControlResponse_ReflashAutomata_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_LokDb_Lok_Function::kIdFieldNumber;
const int TrainControlResponse_LokDb_Lok_Function::kTypeFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_LokDb_Lok_Function::TrainControlResponse_LokDb_Lok_Function()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_LokDb_Lok_Function::InitAsDefaultInstance() {
}

TrainControlResponse_LokDb_Lok_Function::TrainControlResponse_LokDb_Lok_Function(const TrainControlResponse_LokDb_Lok_Function& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_LokDb_Lok_Function::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_LokDb_Lok_Function::~TrainControlResponse_LokDb_Lok_Function() {
  SharedDtor();
}

void TrainControlResponse_LokDb_Lok_Function::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_LokDb_Lok_Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb_Lok_Function::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_LokDb_Lok_Function_descriptor_;
}

const TrainControlResponse_LokDb_Lok_Function& TrainControlResponse_LokDb_Lok_Function::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_LokDb_Lok_Function* TrainControlResponse_LokDb_Lok_Function::default_instance_ = NULL;

TrainControlResponse_LokDb_Lok_Function* TrainControlResponse_LokDb_Lok_Function::New() const {
  return new TrainControlResponse_LokDb_Lok_Function;
}

void TrainControlResponse_LokDb_Lok_Function::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_LokDb_Lok_Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_type;
        break;
      }

      // optional int32 type = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_LokDb_Lok_Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 34;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(34, this->id(), output);
  }

  // optional int32 type = 35;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(35, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_LokDb_Lok_Function::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 34;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(34, this->id(), target);
  }

  // optional int32 type = 35;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(35, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_LokDb_Lok_Function::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 34;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 type = 35;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_LokDb_Lok_Function::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_LokDb_Lok_Function* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_LokDb_Lok_Function*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_LokDb_Lok_Function::MergeFrom(const TrainControlResponse_LokDb_Lok_Function& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_LokDb_Lok_Function::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_LokDb_Lok_Function::CopyFrom(const TrainControlResponse_LokDb_Lok_Function& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_LokDb_Lok_Function::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlResponse_LokDb_Lok_Function::Swap(TrainControlResponse_LokDb_Lok_Function* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_LokDb_Lok_Function::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_LokDb_Lok_Function_descriptor_;
  metadata.reflection = TrainControlResponse_LokDb_Lok_Function_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_LokDb_Lok::kIdFieldNumber;
const int TrainControlResponse_LokDb_Lok::kNameFieldNumber;
const int TrainControlResponse_LokDb_Lok::kAddressFieldNumber;
const int TrainControlResponse_LokDb_Lok::kFunctionFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_LokDb_Lok::TrainControlResponse_LokDb_Lok()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_LokDb_Lok::InitAsDefaultInstance() {
}

TrainControlResponse_LokDb_Lok::TrainControlResponse_LokDb_Lok(const TrainControlResponse_LokDb_Lok& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_LokDb_Lok::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  address_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_LokDb_Lok::~TrainControlResponse_LokDb_Lok() {
  SharedDtor();
}

void TrainControlResponse_LokDb_Lok::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void TrainControlResponse_LokDb_Lok::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb_Lok::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_LokDb_Lok_descriptor_;
}

const TrainControlResponse_LokDb_Lok& TrainControlResponse_LokDb_Lok::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_LokDb_Lok* TrainControlResponse_LokDb_Lok::default_instance_ = NULL;

TrainControlResponse_LokDb_Lok* TrainControlResponse_LokDb_Lok::New() const {
  return new TrainControlResponse_LokDb_Lok;
}

void TrainControlResponse_LokDb_Lok::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    address_ = 0;
  }
  function_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_LokDb_Lok::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_name;
        break;
      }

      // optional string name = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_address;
        break;
      }

      // optional int32 address = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_address:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &address_)));
          set_has_address();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(267)) goto parse_function;
        break;
      }

      // repeated group Function = 33 {
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                33, input, add_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(267)) goto parse_function;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_LokDb_Lok::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 30;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->id(), output);
  }

  // optional string name = 31;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->name(), output);
  }

  // optional int32 address = 32;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(32, this->address(), output);
  }

  // repeated group Function = 33 {
  for (int i = 0; i < this->function_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      33, this->function(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_LokDb_Lok::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 30;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->id(), target);
  }

  // optional string name = 31;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->name(), target);
  }

  // optional int32 address = 32;
  if (has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(32, this->address(), target);
  }

  // repeated group Function = 33 {
  for (int i = 0; i < this->function_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        33, this->function(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_LokDb_Lok::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 30;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string name = 31;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 address = 32;
    if (has_address()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->address());
    }

  }
  // repeated group Function = 33 {
  total_size += 4 * this->function_size();
  for (int i = 0; i < this->function_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->function(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_LokDb_Lok::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_LokDb_Lok* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_LokDb_Lok*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_LokDb_Lok::MergeFrom(const TrainControlResponse_LokDb_Lok& from) {
  GOOGLE_CHECK_NE(&from, this);
  function_.MergeFrom(from.function_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_address()) {
      set_address(from.address());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_LokDb_Lok::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_LokDb_Lok::CopyFrom(const TrainControlResponse_LokDb_Lok& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_LokDb_Lok::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < function_size(); i++) {
    if (!this->function(i).IsInitialized()) return false;
  }
  return true;
}

void TrainControlResponse_LokDb_Lok::Swap(TrainControlResponse_LokDb_Lok* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(address_, other->address_);
    function_.Swap(&other->function_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_LokDb_Lok::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_LokDb_Lok_descriptor_;
  metadata.reflection = TrainControlResponse_LokDb_Lok_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_LokDb::kLokFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_LokDb::TrainControlResponse_LokDb()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_LokDb::InitAsDefaultInstance() {
}

TrainControlResponse_LokDb::TrainControlResponse_LokDb(const TrainControlResponse_LokDb& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_LokDb::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_LokDb::~TrainControlResponse_LokDb() {
  SharedDtor();
}

void TrainControlResponse_LokDb::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_LokDb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_LokDb::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_LokDb_descriptor_;
}

const TrainControlResponse_LokDb& TrainControlResponse_LokDb::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_LokDb* TrainControlResponse_LokDb::default_instance_ = NULL;

TrainControlResponse_LokDb* TrainControlResponse_LokDb::New() const {
  return new TrainControlResponse_LokDb;
}

void TrainControlResponse_LokDb::Clear() {
  lok_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_LokDb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated group Lok = 29 {
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_lok:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                29, input, add_lok()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(235)) goto parse_lok;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_LokDb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated group Lok = 29 {
  for (int i = 0; i < this->lok_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      29, this->lok(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_LokDb::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated group Lok = 29 {
  for (int i = 0; i < this->lok_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        29, this->lok(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_LokDb::ByteSize() const {
  int total_size = 0;

  // repeated group Lok = 29 {
  total_size += 4 * this->lok_size();
  for (int i = 0; i < this->lok_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
        this->lok(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_LokDb::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_LokDb* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_LokDb*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_LokDb::MergeFrom(const TrainControlResponse_LokDb& from) {
  GOOGLE_CHECK_NE(&from, this);
  lok_.MergeFrom(from.lok_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_LokDb::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_LokDb::CopyFrom(const TrainControlResponse_LokDb& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_LokDb::IsInitialized() const {

  for (int i = 0; i < lok_size(); i++) {
    if (!this->lok(i).IsInitialized()) return false;
  }
  return true;
}

void TrainControlResponse_LokDb::Swap(TrainControlResponse_LokDb* other) {
  if (other != this) {
    lok_.Swap(&other->lok_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_LokDb::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_LokDb_descriptor_;
  metadata.reflection = TrainControlResponse_LokDb_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_PicMisc::kCmdFieldNumber;
const int TrainControlResponse_PicMisc::kStatusFieldNumber;
const int TrainControlResponse_PicMisc::kArg1FieldNumber;
const int TrainControlResponse_PicMisc::kArg2FieldNumber;
const int TrainControlResponse_PicMisc::kMoreArgFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_PicMisc::TrainControlResponse_PicMisc()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_PicMisc::InitAsDefaultInstance() {
}

TrainControlResponse_PicMisc::TrainControlResponse_PicMisc(const TrainControlResponse_PicMisc& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_PicMisc::SharedCtor() {
  _cached_size_ = 0;
  cmd_ = 0;
  status_ = 0;
  arg1_ = 0;
  arg2_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_PicMisc::~TrainControlResponse_PicMisc() {
  SharedDtor();
}

void TrainControlResponse_PicMisc::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_PicMisc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_PicMisc::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_PicMisc_descriptor_;
}

const TrainControlResponse_PicMisc& TrainControlResponse_PicMisc::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_PicMisc* TrainControlResponse_PicMisc::default_instance_ = NULL;

TrainControlResponse_PicMisc* TrainControlResponse_PicMisc::New() const {
  return new TrainControlResponse_PicMisc;
}

void TrainControlResponse_PicMisc::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cmd_ = 0;
    status_ = 0;
    arg1_ = 0;
    arg2_ = 0;
  }
  more_arg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_PicMisc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 cmd = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_)));
          set_has_cmd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(312)) goto parse_status;
        break;
      }

      // required int32 status = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_status:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
          set_has_status();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(320)) goto parse_arg1;
        break;
      }

      // required int32 arg1 = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg1:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg1_)));
          set_has_arg1();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(328)) goto parse_arg2;
        break;
      }

      // required int32 arg2 = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_arg2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arg2_)));
          set_has_arg2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_more_arg;
        break;
      }

      // repeated int32 more_arg = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_more_arg:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 336, input, this->mutable_more_arg())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_more_arg())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(336)) goto parse_more_arg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_PicMisc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 cmd = 38;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(38, this->cmd(), output);
  }

  // required int32 status = 39;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(39, this->status(), output);
  }

  // required int32 arg1 = 40;
  if (has_arg1()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->arg1(), output);
  }

  // required int32 arg2 = 41;
  if (has_arg2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(41, this->arg2(), output);
  }

  // repeated int32 more_arg = 42;
  for (int i = 0; i < this->more_arg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      42, this->more_arg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_PicMisc::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 cmd = 38;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(38, this->cmd(), target);
  }

  // required int32 status = 39;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(39, this->status(), target);
  }

  // required int32 arg1 = 40;
  if (has_arg1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->arg1(), target);
  }

  // required int32 arg2 = 41;
  if (has_arg2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(41, this->arg2(), target);
  }

  // repeated int32 more_arg = 42;
  for (int i = 0; i < this->more_arg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(42, this->more_arg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_PicMisc::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 cmd = 38;
    if (has_cmd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cmd());
    }

    // required int32 status = 39;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // required int32 arg1 = 40;
    if (has_arg1()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arg1());
    }

    // required int32 arg2 = 41;
    if (has_arg2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->arg2());
    }

  }
  // repeated int32 more_arg = 42;
  {
    int data_size = 0;
    for (int i = 0; i < this->more_arg_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->more_arg(i));
    }
    total_size += 2 * this->more_arg_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_PicMisc::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_PicMisc* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_PicMisc*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_PicMisc::MergeFrom(const TrainControlResponse_PicMisc& from) {
  GOOGLE_CHECK_NE(&from, this);
  more_arg_.MergeFrom(from.more_arg_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_arg1()) {
      set_arg1(from.arg1());
    }
    if (from.has_arg2()) {
      set_arg2(from.arg2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_PicMisc::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_PicMisc::CopyFrom(const TrainControlResponse_PicMisc& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_PicMisc::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void TrainControlResponse_PicMisc::Swap(TrainControlResponse_PicMisc* other) {
  if (other != this) {
    std::swap(cmd_, other->cmd_);
    std::swap(status_, other->status_);
    std::swap(arg1_, other->arg1_);
    std::swap(arg2_, other->arg2_);
    more_arg_.Swap(&other->more_arg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_PicMisc::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_PicMisc_descriptor_;
  metadata.reflection = TrainControlResponse_PicMisc_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_ReflashPic::kErrorFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_ReflashPic::TrainControlResponse_ReflashPic()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_ReflashPic::InitAsDefaultInstance() {
}

TrainControlResponse_ReflashPic::TrainControlResponse_ReflashPic(const TrainControlResponse_ReflashPic& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_ReflashPic::SharedCtor() {
  _cached_size_ = 0;
  error_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_ReflashPic::~TrainControlResponse_ReflashPic() {
  SharedDtor();
}

void TrainControlResponse_ReflashPic::SharedDtor() {
  if (error_ != &::google::protobuf::internal::kEmptyString) {
    delete error_;
  }
  if (this != default_instance_) {
  }
}

void TrainControlResponse_ReflashPic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_ReflashPic::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_ReflashPic_descriptor_;
}

const TrainControlResponse_ReflashPic& TrainControlResponse_ReflashPic::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_ReflashPic* TrainControlResponse_ReflashPic::default_instance_ = NULL;

TrainControlResponse_ReflashPic* TrainControlResponse_ReflashPic::New() const {
  return new TrainControlResponse_ReflashPic;
}

void TrainControlResponse_ReflashPic::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_error()) {
      if (error_ != &::google::protobuf::internal::kEmptyString) {
        error_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_ReflashPic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string error = 44;
      case 44: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_ReflashPic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string error = 44;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      44, this->error(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_ReflashPic::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string error = 44;
  if (has_error()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        44, this->error(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_ReflashPic::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string error = 44;
    if (has_error()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_ReflashPic::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_ReflashPic* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_ReflashPic*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_ReflashPic::MergeFrom(const TrainControlResponse_ReflashPic& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_error()) {
      set_error(from.error());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_ReflashPic::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_ReflashPic::CopyFrom(const TrainControlResponse_ReflashPic& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_ReflashPic::IsInitialized() const {

  return true;
}

void TrainControlResponse_ReflashPic::Swap(TrainControlResponse_ReflashPic* other) {
  if (other != this) {
    std::swap(error_, other->error_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_ReflashPic::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_ReflashPic_descriptor_;
  metadata.reflection = TrainControlResponse_ReflashPic_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_Cv::kTrainIdFieldNumber;
const int TrainControlResponse_Cv::kCvFieldNumber;
const int TrainControlResponse_Cv::kErrorCodeFieldNumber;
const int TrainControlResponse_Cv::kValueFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_Cv::TrainControlResponse_Cv()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_Cv::InitAsDefaultInstance() {
}

TrainControlResponse_Cv::TrainControlResponse_Cv(const TrainControlResponse_Cv& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_Cv::SharedCtor() {
  _cached_size_ = 0;
  train_id_ = 0;
  cv_ = 0;
  error_code_ = 0;
  value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_Cv::~TrainControlResponse_Cv() {
  SharedDtor();
}

void TrainControlResponse_Cv::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_Cv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_Cv::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_Cv_descriptor_;
}

const TrainControlResponse_Cv& TrainControlResponse_Cv::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_Cv* TrainControlResponse_Cv::default_instance_ = NULL;

TrainControlResponse_Cv* TrainControlResponse_Cv::New() const {
  return new TrainControlResponse_Cv;
}

void TrainControlResponse_Cv::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    train_id_ = 0;
    cv_ = 0;
    error_code_ = 0;
    value_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_Cv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 train_id = 46;
      case 46: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &train_id_)));
          set_has_train_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(376)) goto parse_cv;
        break;
      }

      // required int32 cv = 47;
      case 47: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_cv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cv_)));
          set_has_cv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(384)) goto parse_error_code;
        break;
      }

      // optional int32 error_code = 48;
      case 48: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_error_code:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &error_code_)));
          set_has_error_code();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(392)) goto parse_value;
        break;
      }

      // optional int32 value = 49;
      case 49: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
          set_has_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_Cv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 train_id = 46;
  if (has_train_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(46, this->train_id(), output);
  }

  // required int32 cv = 47;
  if (has_cv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(47, this->cv(), output);
  }

  // optional int32 error_code = 48;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(48, this->error_code(), output);
  }

  // optional int32 value = 49;
  if (has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(49, this->value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_Cv::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 train_id = 46;
  if (has_train_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(46, this->train_id(), target);
  }

  // required int32 cv = 47;
  if (has_cv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(47, this->cv(), target);
  }

  // optional int32 error_code = 48;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(48, this->error_code(), target);
  }

  // optional int32 value = 49;
  if (has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(49, this->value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_Cv::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 train_id = 46;
    if (has_train_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->train_id());
    }

    // required int32 cv = 47;
    if (has_cv()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->cv());
    }

    // optional int32 error_code = 48;
    if (has_error_code()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->error_code());
    }

    // optional int32 value = 49;
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->value());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_Cv::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_Cv* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_Cv*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_Cv::MergeFrom(const TrainControlResponse_Cv& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_train_id()) {
      set_train_id(from.train_id());
    }
    if (from.has_cv()) {
      set_cv(from.cv());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
    if (from.has_value()) {
      set_value(from.value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_Cv::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_Cv::CopyFrom(const TrainControlResponse_Cv& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_Cv::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TrainControlResponse_Cv::Swap(TrainControlResponse_Cv* other) {
  if (other != this) {
    std::swap(train_id_, other->train_id_);
    std::swap(cv_, other->cv_);
    std::swap(error_code_, other->error_code_);
    std::swap(value_, other->value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_Cv::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_Cv_descriptor_;
  metadata.reflection = TrainControlResponse_Cv_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse_WaitForChangeResponse::kTimestampFieldNumber;
const int TrainControlResponse_WaitForChangeResponse::kIdFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse_WaitForChangeResponse::TrainControlResponse_WaitForChangeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse_WaitForChangeResponse::InitAsDefaultInstance() {
}

TrainControlResponse_WaitForChangeResponse::TrainControlResponse_WaitForChangeResponse(const TrainControlResponse_WaitForChangeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse_WaitForChangeResponse::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = GOOGLE_ULONGLONG(0);
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse_WaitForChangeResponse::~TrainControlResponse_WaitForChangeResponse() {
  SharedDtor();
}

void TrainControlResponse_WaitForChangeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainControlResponse_WaitForChangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse_WaitForChangeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_WaitForChangeResponse_descriptor_;
}

const TrainControlResponse_WaitForChangeResponse& TrainControlResponse_WaitForChangeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse_WaitForChangeResponse* TrainControlResponse_WaitForChangeResponse::default_instance_ = NULL;

TrainControlResponse_WaitForChangeResponse* TrainControlResponse_WaitForChangeResponse::New() const {
  return new TrainControlResponse_WaitForChangeResponse;
}

void TrainControlResponse_WaitForChangeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    timestamp_ = GOOGLE_ULONGLONG(0);
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse_WaitForChangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 timestamp = 53;
      case 53: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(432)) goto parse_id;
        break;
      }

      // optional int32 id = 54;
      case 54: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse_WaitForChangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 timestamp = 53;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(53, this->timestamp(), output);
  }

  // optional int32 id = 54;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(54, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse_WaitForChangeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 timestamp = 53;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(53, this->timestamp(), target);
  }

  // optional int32 id = 54;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(54, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse_WaitForChangeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 timestamp = 53;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }

    // optional int32 id = 54;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse_WaitForChangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse_WaitForChangeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse_WaitForChangeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse_WaitForChangeResponse::MergeFrom(const TrainControlResponse_WaitForChangeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse_WaitForChangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse_WaitForChangeResponse::CopyFrom(const TrainControlResponse_WaitForChangeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse_WaitForChangeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void TrainControlResponse_WaitForChangeResponse::Swap(TrainControlResponse_WaitForChangeResponse* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse_WaitForChangeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_WaitForChangeResponse_descriptor_;
  metadata.reflection = TrainControlResponse_WaitForChangeResponse_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int TrainControlResponse::kSpeedFieldNumber;
const int TrainControlResponse::kAccessoryFieldNumber;
const int TrainControlResponse::kEmergencystopFieldNumber;
const int TrainControlResponse::kRpcresponseFieldNumber;
const int TrainControlResponse::kPongFieldNumber;
const int TrainControlResponse::kCurrentaddressFieldNumber;
const int TrainControlResponse::kRawcanpacketFieldNumber;
const int TrainControlResponse::kReflashautomataFieldNumber;
const int TrainControlResponse::kLokdbFieldNumber;
const int TrainControlResponse::kLokstateFieldNumber;
const int TrainControlResponse::kPicmiscFieldNumber;
const int TrainControlResponse::kReflashpicFieldNumber;
const int TrainControlResponse::kCvFieldNumber;
const int TrainControlResponse::kWaitforchangeresponseFieldNumber;
#endif  // !_MSC_VER

TrainControlResponse::TrainControlResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TrainControlResponse::InitAsDefaultInstance() {
  speed_ = const_cast< ::server::TrainControlResponse_Speed*>(&::server::TrainControlResponse_Speed::default_instance());
  accessory_ = const_cast< ::server::TrainControlResponse_Accessory*>(&::server::TrainControlResponse_Accessory::default_instance());
  emergencystop_ = const_cast< ::server::TrainControlResponse_EmergencyStop*>(&::server::TrainControlResponse_EmergencyStop::default_instance());
  rpcresponse_ = const_cast< ::server::TrainControlResponse_RpcResponse*>(&::server::TrainControlResponse_RpcResponse::default_instance());
  pong_ = const_cast< ::server::TrainControlResponse_Pong*>(&::server::TrainControlResponse_Pong::default_instance());
  currentaddress_ = const_cast< ::server::TrainControlResponse_CurrentAddress*>(&::server::TrainControlResponse_CurrentAddress::default_instance());
  rawcanpacket_ = const_cast< ::server::TrainControlResponse_RawCanPacket*>(&::server::TrainControlResponse_RawCanPacket::default_instance());
  reflashautomata_ = const_cast< ::server::TrainControlResponse_ReflashAutomata*>(&::server::TrainControlResponse_ReflashAutomata::default_instance());
  lokdb_ = const_cast< ::server::TrainControlResponse_LokDb*>(&::server::TrainControlResponse_LokDb::default_instance());
  picmisc_ = const_cast< ::server::TrainControlResponse_PicMisc*>(&::server::TrainControlResponse_PicMisc::default_instance());
  reflashpic_ = const_cast< ::server::TrainControlResponse_ReflashPic*>(&::server::TrainControlResponse_ReflashPic::default_instance());
  cv_ = const_cast< ::server::TrainControlResponse_Cv*>(&::server::TrainControlResponse_Cv::default_instance());
  waitforchangeresponse_ = const_cast< ::server::TrainControlResponse_WaitForChangeResponse*>(&::server::TrainControlResponse_WaitForChangeResponse::default_instance());
}

TrainControlResponse::TrainControlResponse(const TrainControlResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TrainControlResponse::SharedCtor() {
  _cached_size_ = 0;
  speed_ = NULL;
  accessory_ = NULL;
  emergencystop_ = NULL;
  rpcresponse_ = NULL;
  pong_ = NULL;
  currentaddress_ = NULL;
  rawcanpacket_ = NULL;
  reflashautomata_ = NULL;
  lokdb_ = NULL;
  picmisc_ = NULL;
  reflashpic_ = NULL;
  cv_ = NULL;
  waitforchangeresponse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainControlResponse::~TrainControlResponse() {
  SharedDtor();
}

void TrainControlResponse::SharedDtor() {
  if (this != default_instance_) {
    delete speed_;
    delete accessory_;
    delete emergencystop_;
    delete rpcresponse_;
    delete pong_;
    delete currentaddress_;
    delete rawcanpacket_;
    delete reflashautomata_;
    delete lokdb_;
    delete picmisc_;
    delete reflashpic_;
    delete cv_;
    delete waitforchangeresponse_;
  }
}

void TrainControlResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainControlResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainControlResponse_descriptor_;
}

const TrainControlResponse& TrainControlResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TrainControlResponse* TrainControlResponse::default_instance_ = NULL;

TrainControlResponse* TrainControlResponse::New() const {
  return new TrainControlResponse;
}

void TrainControlResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_speed()) {
      if (speed_ != NULL) speed_->::server::TrainControlResponse_Speed::Clear();
    }
    if (has_accessory()) {
      if (accessory_ != NULL) accessory_->::server::TrainControlResponse_Accessory::Clear();
    }
    if (has_emergencystop()) {
      if (emergencystop_ != NULL) emergencystop_->::server::TrainControlResponse_EmergencyStop::Clear();
    }
    if (has_rpcresponse()) {
      if (rpcresponse_ != NULL) rpcresponse_->::server::TrainControlResponse_RpcResponse::Clear();
    }
    if (has_pong()) {
      if (pong_ != NULL) pong_->::server::TrainControlResponse_Pong::Clear();
    }
    if (has_currentaddress()) {
      if (currentaddress_ != NULL) currentaddress_->::server::TrainControlResponse_CurrentAddress::Clear();
    }
    if (has_rawcanpacket()) {
      if (rawcanpacket_ != NULL) rawcanpacket_->::server::TrainControlResponse_RawCanPacket::Clear();
    }
    if (has_reflashautomata()) {
      if (reflashautomata_ != NULL) reflashautomata_->::server::TrainControlResponse_ReflashAutomata::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_lokdb()) {
      if (lokdb_ != NULL) lokdb_->::server::TrainControlResponse_LokDb::Clear();
    }
    if (has_picmisc()) {
      if (picmisc_ != NULL) picmisc_->::server::TrainControlResponse_PicMisc::Clear();
    }
    if (has_reflashpic()) {
      if (reflashpic_ != NULL) reflashpic_->::server::TrainControlResponse_ReflashPic::Clear();
    }
    if (has_cv()) {
      if (cv_ != NULL) cv_->::server::TrainControlResponse_Cv::Clear();
    }
    if (has_waitforchangeresponse()) {
      if (waitforchangeresponse_ != NULL) waitforchangeresponse_->::server::TrainControlResponse_WaitForChangeResponse::Clear();
    }
  }
  lokstate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TrainControlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional group Speed = 1 {
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                1, input, mutable_speed()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(35)) goto parse_accessory;
        break;
      }

      // optional group Accessory = 4 {
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_accessory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                4, input, mutable_accessory()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(67)) goto parse_emergencystop;
        break;
      }

      // optional group EmergencyStop = 8 {
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_emergencystop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                8, input, mutable_emergencystop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(131)) goto parse_rpcresponse;
        break;
      }

      // optional group RpcResponse = 16 {
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_rpcresponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                16, input, mutable_rpcresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(155)) goto parse_pong;
        break;
      }

      // optional group Pong = 19 {
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_pong:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                19, input, mutable_pong()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(171)) goto parse_currentaddress;
        break;
      }

      // optional group CurrentAddress = 21 {
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_currentaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                21, input, mutable_currentaddress()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(187)) goto parse_rawcanpacket;
        break;
      }

      // optional group RawCanPacket = 23 {
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_rawcanpacket:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                23, input, mutable_rawcanpacket()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(219)) goto parse_reflashautomata;
        break;
      }

      // optional group ReflashAutomata = 27 {
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_reflashautomata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                27, input, mutable_reflashautomata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(227)) goto parse_lokdb;
        break;
      }

      // optional group LokDb = 28 {
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_lokdb:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                28, input, mutable_lokdb()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_lokstate;
        break;
      }

      // repeated .server.LokStateProto lokstate = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lokstate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lokstate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_lokstate;
        if (input->ExpectTag(299)) goto parse_picmisc;
        break;
      }

      // optional group PicMisc = 37 {
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_picmisc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                37, input, mutable_picmisc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(347)) goto parse_reflashpic;
        break;
      }

      // optional group ReflashPic = 43 {
      case 43: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_reflashpic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                43, input, mutable_reflashpic()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(363)) goto parse_cv;
        break;
      }

      // optional group Cv = 45 {
      case 45: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_cv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                45, input, mutable_cv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(419)) goto parse_waitforchangeresponse;
        break;
      }

      // optional group WaitForChangeResponse = 52 {
      case 52: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_START_GROUP) {
         parse_waitforchangeresponse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadGroupNoVirtual(
                52, input, mutable_waitforchangeresponse()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TrainControlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional group Speed = 1 {
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      1, this->speed(), output);
  }

  // optional group Accessory = 4 {
  if (has_accessory()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      4, this->accessory(), output);
  }

  // optional group EmergencyStop = 8 {
  if (has_emergencystop()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      8, this->emergencystop(), output);
  }

  // optional group RpcResponse = 16 {
  if (has_rpcresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      16, this->rpcresponse(), output);
  }

  // optional group Pong = 19 {
  if (has_pong()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      19, this->pong(), output);
  }

  // optional group CurrentAddress = 21 {
  if (has_currentaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      21, this->currentaddress(), output);
  }

  // optional group RawCanPacket = 23 {
  if (has_rawcanpacket()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      23, this->rawcanpacket(), output);
  }

  // optional group ReflashAutomata = 27 {
  if (has_reflashautomata()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      27, this->reflashautomata(), output);
  }

  // optional group LokDb = 28 {
  if (has_lokdb()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      28, this->lokdb(), output);
  }

  // repeated .server.LokStateProto lokstate = 36;
  for (int i = 0; i < this->lokstate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->lokstate(i), output);
  }

  // optional group PicMisc = 37 {
  if (has_picmisc()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      37, this->picmisc(), output);
  }

  // optional group ReflashPic = 43 {
  if (has_reflashpic()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      43, this->reflashpic(), output);
  }

  // optional group Cv = 45 {
  if (has_cv()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      45, this->cv(), output);
  }

  // optional group WaitForChangeResponse = 52 {
  if (has_waitforchangeresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteGroupMaybeToArray(
      52, this->waitforchangeresponse(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TrainControlResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional group Speed = 1 {
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        1, this->speed(), target);
  }

  // optional group Accessory = 4 {
  if (has_accessory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        4, this->accessory(), target);
  }

  // optional group EmergencyStop = 8 {
  if (has_emergencystop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        8, this->emergencystop(), target);
  }

  // optional group RpcResponse = 16 {
  if (has_rpcresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        16, this->rpcresponse(), target);
  }

  // optional group Pong = 19 {
  if (has_pong()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        19, this->pong(), target);
  }

  // optional group CurrentAddress = 21 {
  if (has_currentaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        21, this->currentaddress(), target);
  }

  // optional group RawCanPacket = 23 {
  if (has_rawcanpacket()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        23, this->rawcanpacket(), target);
  }

  // optional group ReflashAutomata = 27 {
  if (has_reflashautomata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        27, this->reflashautomata(), target);
  }

  // optional group LokDb = 28 {
  if (has_lokdb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        28, this->lokdb(), target);
  }

  // repeated .server.LokStateProto lokstate = 36;
  for (int i = 0; i < this->lokstate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->lokstate(i), target);
  }

  // optional group PicMisc = 37 {
  if (has_picmisc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        37, this->picmisc(), target);
  }

  // optional group ReflashPic = 43 {
  if (has_reflashpic()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        43, this->reflashpic(), target);
  }

  // optional group Cv = 45 {
  if (has_cv()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        45, this->cv(), target);
  }

  // optional group WaitForChangeResponse = 52 {
  if (has_waitforchangeresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteGroupNoVirtualToArray(
        52, this->waitforchangeresponse(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TrainControlResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional group Speed = 1 {
    if (has_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->speed());
    }

    // optional group Accessory = 4 {
    if (has_accessory()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->accessory());
    }

    // optional group EmergencyStop = 8 {
    if (has_emergencystop()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->emergencystop());
    }

    // optional group RpcResponse = 16 {
    if (has_rpcresponse()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->rpcresponse());
    }

    // optional group Pong = 19 {
    if (has_pong()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->pong());
    }

    // optional group CurrentAddress = 21 {
    if (has_currentaddress()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->currentaddress());
    }

    // optional group RawCanPacket = 23 {
    if (has_rawcanpacket()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->rawcanpacket());
    }

    // optional group ReflashAutomata = 27 {
    if (has_reflashautomata()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->reflashautomata());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional group LokDb = 28 {
    if (has_lokdb()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->lokdb());
    }

    // optional group PicMisc = 37 {
    if (has_picmisc()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->picmisc());
    }

    // optional group ReflashPic = 43 {
    if (has_reflashpic()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->reflashpic());
    }

    // optional group Cv = 45 {
    if (has_cv()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->cv());
    }

    // optional group WaitForChangeResponse = 52 {
    if (has_waitforchangeresponse()) {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::GroupSizeNoVirtual(
          this->waitforchangeresponse());
    }

  }
  // repeated .server.LokStateProto lokstate = 36;
  total_size += 2 * this->lokstate_size();
  for (int i = 0; i < this->lokstate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lokstate(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainControlResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TrainControlResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TrainControlResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainControlResponse::MergeFrom(const TrainControlResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  lokstate_.MergeFrom(from.lokstate_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_speed()) {
      mutable_speed()->::server::TrainControlResponse_Speed::MergeFrom(from.speed());
    }
    if (from.has_accessory()) {
      mutable_accessory()->::server::TrainControlResponse_Accessory::MergeFrom(from.accessory());
    }
    if (from.has_emergencystop()) {
      mutable_emergencystop()->::server::TrainControlResponse_EmergencyStop::MergeFrom(from.emergencystop());
    }
    if (from.has_rpcresponse()) {
      mutable_rpcresponse()->::server::TrainControlResponse_RpcResponse::MergeFrom(from.rpcresponse());
    }
    if (from.has_pong()) {
      mutable_pong()->::server::TrainControlResponse_Pong::MergeFrom(from.pong());
    }
    if (from.has_currentaddress()) {
      mutable_currentaddress()->::server::TrainControlResponse_CurrentAddress::MergeFrom(from.currentaddress());
    }
    if (from.has_rawcanpacket()) {
      mutable_rawcanpacket()->::server::TrainControlResponse_RawCanPacket::MergeFrom(from.rawcanpacket());
    }
    if (from.has_reflashautomata()) {
      mutable_reflashautomata()->::server::TrainControlResponse_ReflashAutomata::MergeFrom(from.reflashautomata());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_lokdb()) {
      mutable_lokdb()->::server::TrainControlResponse_LokDb::MergeFrom(from.lokdb());
    }
    if (from.has_picmisc()) {
      mutable_picmisc()->::server::TrainControlResponse_PicMisc::MergeFrom(from.picmisc());
    }
    if (from.has_reflashpic()) {
      mutable_reflashpic()->::server::TrainControlResponse_ReflashPic::MergeFrom(from.reflashpic());
    }
    if (from.has_cv()) {
      mutable_cv()->::server::TrainControlResponse_Cv::MergeFrom(from.cv());
    }
    if (from.has_waitforchangeresponse()) {
      mutable_waitforchangeresponse()->::server::TrainControlResponse_WaitForChangeResponse::MergeFrom(from.waitforchangeresponse());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TrainControlResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainControlResponse::CopyFrom(const TrainControlResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainControlResponse::IsInitialized() const {

  if (has_speed()) {
    if (!this->speed().IsInitialized()) return false;
  }
  if (has_accessory()) {
    if (!this->accessory().IsInitialized()) return false;
  }
  if (has_emergencystop()) {
    if (!this->emergencystop().IsInitialized()) return false;
  }
  if (has_rpcresponse()) {
    if (!this->rpcresponse().IsInitialized()) return false;
  }
  if (has_pong()) {
    if (!this->pong().IsInitialized()) return false;
  }
  if (has_currentaddress()) {
    if (!this->currentaddress().IsInitialized()) return false;
  }
  if (has_lokdb()) {
    if (!this->lokdb().IsInitialized()) return false;
  }
  for (int i = 0; i < lokstate_size(); i++) {
    if (!this->lokstate(i).IsInitialized()) return false;
  }
  if (has_picmisc()) {
    if (!this->picmisc().IsInitialized()) return false;
  }
  if (has_cv()) {
    if (!this->cv().IsInitialized()) return false;
  }
  if (has_waitforchangeresponse()) {
    if (!this->waitforchangeresponse().IsInitialized()) return false;
  }
  return true;
}

void TrainControlResponse::Swap(TrainControlResponse* other) {
  if (other != this) {
    std::swap(speed_, other->speed_);
    std::swap(accessory_, other->accessory_);
    std::swap(emergencystop_, other->emergencystop_);
    std::swap(rpcresponse_, other->rpcresponse_);
    std::swap(pong_, other->pong_);
    std::swap(currentaddress_, other->currentaddress_);
    std::swap(rawcanpacket_, other->rawcanpacket_);
    std::swap(reflashautomata_, other->reflashautomata_);
    std::swap(lokdb_, other->lokdb_);
    lokstate_.Swap(&other->lokstate_);
    std::swap(picmisc_, other->picmisc_);
    std::swap(reflashpic_, other->reflashpic_);
    std::swap(cv_, other->cv_);
    std::swap(waitforchangeresponse_, other->waitforchangeresponse_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TrainControlResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainControlResponse_descriptor_;
  metadata.reflection = TrainControlResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TinyRpcRequest::kIdFieldNumber;
const int TinyRpcRequest::kRequestFieldNumber;
#endif  // !_MSC_VER

TinyRpcRequest::TinyRpcRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TinyRpcRequest::InitAsDefaultInstance() {
  request_ = const_cast< ::server::TrainControlRequest*>(&::server::TrainControlRequest::default_instance());
}

TinyRpcRequest::TinyRpcRequest(const TinyRpcRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TinyRpcRequest::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  request_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TinyRpcRequest::~TinyRpcRequest() {
  SharedDtor();
}

void TinyRpcRequest::SharedDtor() {
  if (this != default_instance_) {
    delete request_;
  }
}

void TinyRpcRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TinyRpcRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TinyRpcRequest_descriptor_;
}

const TinyRpcRequest& TinyRpcRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TinyRpcRequest* TinyRpcRequest::default_instance_ = NULL;

TinyRpcRequest* TinyRpcRequest::New() const {
  return new TinyRpcRequest;
}

void TinyRpcRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_request()) {
      if (request_ != NULL) request_->::server::TrainControlRequest::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TinyRpcRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_request;
        break;
      }

      // required .server.TrainControlRequest request = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_request()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TinyRpcRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // required .server.TrainControlRequest request = 2;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->request(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TinyRpcRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // required .server.TrainControlRequest request = 2;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->request(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TinyRpcRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // required .server.TrainControlRequest request = 2;
    if (has_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->request());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TinyRpcRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TinyRpcRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TinyRpcRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TinyRpcRequest::MergeFrom(const TinyRpcRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_request()) {
      mutable_request()->::server::TrainControlRequest::MergeFrom(from.request());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TinyRpcRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TinyRpcRequest::CopyFrom(const TinyRpcRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TinyRpcRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_request()) {
    if (!this->request().IsInitialized()) return false;
  }
  return true;
}

void TinyRpcRequest::Swap(TinyRpcRequest* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(request_, other->request_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TinyRpcRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TinyRpcRequest_descriptor_;
  metadata.reflection = TinyRpcRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TinyRpcResponse::kIdFieldNumber;
const int TinyRpcResponse::kResponseFieldNumber;
const int TinyRpcResponse::kFailedFieldNumber;
const int TinyRpcResponse::kErrorDetailFieldNumber;
#endif  // !_MSC_VER

TinyRpcResponse::TinyRpcResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TinyRpcResponse::InitAsDefaultInstance() {
  response_ = const_cast< ::server::TrainControlResponse*>(&::server::TrainControlResponse::default_instance());
}

TinyRpcResponse::TinyRpcResponse(const TinyRpcResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TinyRpcResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  response_ = NULL;
  failed_ = false;
  error_detail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TinyRpcResponse::~TinyRpcResponse() {
  SharedDtor();
}

void TinyRpcResponse::SharedDtor() {
  if (error_detail_ != &::google::protobuf::internal::kEmptyString) {
    delete error_detail_;
  }
  if (this != default_instance_) {
    delete response_;
  }
}

void TinyRpcResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TinyRpcResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TinyRpcResponse_descriptor_;
}

const TinyRpcResponse& TinyRpcResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_train_5fcontrol_2eproto();
  return *default_instance_;
}

TinyRpcResponse* TinyRpcResponse::default_instance_ = NULL;

TinyRpcResponse* TinyRpcResponse::New() const {
  return new TinyRpcResponse;
}

void TinyRpcResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_response()) {
      if (response_ != NULL) response_->::server::TrainControlResponse::Clear();
    }
    failed_ = false;
    if (has_error_detail()) {
      if (error_detail_ != &::google::protobuf::internal::kEmptyString) {
        error_detail_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TinyRpcResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_failed;
        break;
      }

      // optional bool failed = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_failed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &failed_)));
          set_has_failed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_error_detail;
        break;
      }

      // optional string error_detail = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_error_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_detail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->error_detail().data(), this->error_detail().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_response;
        break;
      }

      // optional .server.TrainControlResponse response = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_response()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TinyRpcResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional bool failed = 2 [default = false];
  if (has_failed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->failed(), output);
  }

  // optional string error_detail = 3;
  if (has_error_detail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_detail().data(), this->error_detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->error_detail(), output);
  }

  // optional .server.TrainControlResponse response = 4;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->response(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TinyRpcResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional bool failed = 2 [default = false];
  if (has_failed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->failed(), target);
  }

  // optional string error_detail = 3;
  if (has_error_detail()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->error_detail().data(), this->error_detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_detail(), target);
  }

  // optional .server.TrainControlResponse response = 4;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->response(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TinyRpcResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .server.TrainControlResponse response = 4;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response());
    }

    // optional bool failed = 2 [default = false];
    if (has_failed()) {
      total_size += 1 + 1;
    }

    // optional string error_detail = 3;
    if (has_error_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_detail());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TinyRpcResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TinyRpcResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TinyRpcResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TinyRpcResponse::MergeFrom(const TinyRpcResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_response()) {
      mutable_response()->::server::TrainControlResponse::MergeFrom(from.response());
    }
    if (from.has_failed()) {
      set_failed(from.failed());
    }
    if (from.has_error_detail()) {
      set_error_detail(from.error_detail());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TinyRpcResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TinyRpcResponse::CopyFrom(const TinyRpcResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TinyRpcResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_response()) {
    if (!this->response().IsInitialized()) return false;
  }
  return true;
}

void TinyRpcResponse::Swap(TinyRpcResponse* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(response_, other->response_);
    std::swap(failed_, other->failed_);
    std::swap(error_detail_, other->error_detail_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TinyRpcResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TinyRpcResponse_descriptor_;
  metadata.reflection = TinyRpcResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace server

// @@protoc_insertion_point(global_scope)
